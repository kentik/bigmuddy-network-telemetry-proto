// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: cisco_ios_xr_ipv4_bgp_oper/bgp/config_instances/config_instance/config_vrfs/config_vrf/entity_configurations/entity_configuration/bgp_config_entity_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// BGP entity config information
type BgpConfigEntityBag_KEYS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceName    string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	VrfName         string `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	EntityType      string `protobuf:"bytes,3,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	NeighborAddress string `protobuf:"bytes,4,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	EntityName      string `protobuf:"bytes,5,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
}

func (x *BgpConfigEntityBag_KEYS) Reset() {
	*x = BgpConfigEntityBag_KEYS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpConfigEntityBag_KEYS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpConfigEntityBag_KEYS) ProtoMessage() {}

func (x *BgpConfigEntityBag_KEYS) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpConfigEntityBag_KEYS.ProtoReflect.Descriptor instead.
func (*BgpConfigEntityBag_KEYS) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{0}
}

func (x *BgpConfigEntityBag_KEYS) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *BgpConfigEntityBag_KEYS) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *BgpConfigEntityBag_KEYS) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *BgpConfigEntityBag_KEYS) GetNeighborAddress() string {
	if x != nil {
		return x.NeighborAddress
	}
	return ""
}

func (x *BgpConfigEntityBag_KEYS) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

type BgpConfigEntityBag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Neighbor Address
	NeighborAddress *BgpAddrtype `protobuf:"bytes,50,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	// Entity/group name
	GroupName string `protobuf:"bytes,51,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// Entity type
	ConfigurationType string `protobuf:"bytes,52,opt,name=configuration_type,json=configurationType,proto3" json:"configuration_type,omitempty"`
	// AF identifier
	AddressFamilyIdentifier uint32 `protobuf:"varint,53,opt,name=address_family_identifier,json=addressFamilyIdentifier,proto3" json:"address_family_identifier,omitempty"`
	// AF-independent config
	AfIndependentConfig *BgpAfIndep_ `protobuf:"bytes,54,opt,name=af_independent_config,json=afIndependentConfig,proto3" json:"af_independent_config,omitempty"`
	// Af-dependent config
	AfDependentConfig []*BgpAfP `protobuf:"bytes,55,rep,name=af_dependent_config,json=afDependentConfig,proto3" json:"af_dependent_config,omitempty"`
}

func (x *BgpConfigEntityBag) Reset() {
	*x = BgpConfigEntityBag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpConfigEntityBag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpConfigEntityBag) ProtoMessage() {}

func (x *BgpConfigEntityBag) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpConfigEntityBag.ProtoReflect.Descriptor instead.
func (*BgpConfigEntityBag) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{1}
}

func (x *BgpConfigEntityBag) GetNeighborAddress() *BgpAddrtype {
	if x != nil {
		return x.NeighborAddress
	}
	return nil
}

func (x *BgpConfigEntityBag) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *BgpConfigEntityBag) GetConfigurationType() string {
	if x != nil {
		return x.ConfigurationType
	}
	return ""
}

func (x *BgpConfigEntityBag) GetAddressFamilyIdentifier() uint32 {
	if x != nil {
		return x.AddressFamilyIdentifier
	}
	return 0
}

func (x *BgpConfigEntityBag) GetAfIndependentConfig() *BgpAfIndep_ {
	if x != nil {
		return x.AfIndependentConfig
	}
	return nil
}

func (x *BgpConfigEntityBag) GetAfDependentConfig() []*BgpAfP {
	if x != nil {
		return x.AfDependentConfig
	}
	return nil
}

// IPV4Tunnel Address type
type IPV4TunnelAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IPV4TunnelAddressType) Reset() {
	*x = IPV4TunnelAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPV4TunnelAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPV4TunnelAddressType) ProtoMessage() {}

func (x *IPV4TunnelAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPV4TunnelAddressType.ProtoReflect.Descriptor instead.
func (*IPV4TunnelAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{2}
}

func (x *IPV4TunnelAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// IPV4MDT Address type
type IPV4MDTAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IPV4MDTAddressType) Reset() {
	*x = IPV4MDTAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPV4MDTAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPV4MDTAddressType) ProtoMessage() {}

func (x *IPV4MDTAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPV4MDTAddressType.ProtoReflect.Descriptor instead.
func (*IPV4MDTAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{3}
}

func (x *IPV4MDTAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// IPV4 RTConstraint Address type
type RTConstraintAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RTConstraintAddressType) Reset() {
	*x = RTConstraintAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RTConstraintAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTConstraintAddressType) ProtoMessage() {}

func (x *RTConstraintAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTConstraintAddressType.ProtoReflect.Descriptor instead.
func (*RTConstraintAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{4}
}

func (x *RTConstraintAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// IPV6 Address type
type IPV6AddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IPV6AddressType) Reset() {
	*x = IPV6AddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPV6AddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPV6AddressType) ProtoMessage() {}

func (x *IPV6AddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPV6AddressType.ProtoReflect.Descriptor instead.
func (*IPV6AddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{5}
}

func (x *IPV6AddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BgpL2VpnAddrT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L2VpnAddress []byte `protobuf:"bytes,1,opt,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
}

func (x *BgpL2VpnAddrT) Reset() {
	*x = BgpL2VpnAddrT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpL2VpnAddrT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpL2VpnAddrT) ProtoMessage() {}

func (x *BgpL2VpnAddrT) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpL2VpnAddrT.ProtoReflect.Descriptor instead.
func (*BgpL2VpnAddrT) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{6}
}

func (x *BgpL2VpnAddrT) GetL2VpnAddress() []byte {
	if x != nil {
		return x.L2VpnAddress
	}
	return nil
}

// L2VPN EVPN Address type
type L2VPNEVPNAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *L2VPNEVPNAddressType) Reset() {
	*x = L2VPNEVPNAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L2VPNEVPNAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L2VPNEVPNAddressType) ProtoMessage() {}

func (x *L2VPNEVPNAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L2VPNEVPNAddressType.ProtoReflect.Descriptor instead.
func (*L2VPNEVPNAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{7}
}

func (x *L2VPNEVPNAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BgpL2VpnMspwAddrT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L2VpnAddress []byte `protobuf:"bytes,1,opt,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
}

func (x *BgpL2VpnMspwAddrT) Reset() {
	*x = BgpL2VpnMspwAddrT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpL2VpnMspwAddrT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpL2VpnMspwAddrT) ProtoMessage() {}

func (x *BgpL2VpnMspwAddrT) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpL2VpnMspwAddrT.ProtoReflect.Descriptor instead.
func (*BgpL2VpnMspwAddrT) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{8}
}

func (x *BgpL2VpnMspwAddrT) GetL2VpnAddress() []byte {
	if x != nil {
		return x.L2VpnAddress
	}
	return nil
}

// IPV6 MVPN Address type
type IPV6MVPNAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IPV6MVPNAddressType) Reset() {
	*x = IPV6MVPNAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPV6MVPNAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPV6MVPNAddressType) ProtoMessage() {}

func (x *IPV6MVPNAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPV6MVPNAddressType.ProtoReflect.Descriptor instead.
func (*IPV6MVPNAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{9}
}

func (x *IPV6MVPNAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// IPV4 MVPN Address type
type IPV4MVPNAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IPV4MVPNAddressType) Reset() {
	*x = IPV4MVPNAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPV4MVPNAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPV4MVPNAddressType) ProtoMessage() {}

func (x *IPV4MVPNAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPV4MVPNAddressType.ProtoReflect.Descriptor instead.
func (*IPV4MVPNAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{10}
}

func (x *IPV4MVPNAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// LINKSTATE LINKSTATE Address type
type LS_LSAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LS_LSAddressType) Reset() {
	*x = LS_LSAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LS_LSAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LS_LSAddressType) ProtoMessage() {}

func (x *LS_LSAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LS_LSAddressType.ProtoReflect.Descriptor instead.
func (*LS_LSAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{11}
}

func (x *LS_LSAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// IPv4 Flowspec Address type
type IPv4FlowspecAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IPv4FlowspecAddressType) Reset() {
	*x = IPv4FlowspecAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPv4FlowspecAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPv4FlowspecAddressType) ProtoMessage() {}

func (x *IPv4FlowspecAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPv4FlowspecAddressType.ProtoReflect.Descriptor instead.
func (*IPv4FlowspecAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{12}
}

func (x *IPv4FlowspecAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// IPv6 Flowspec Address type
type IPv6FlowspecAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IPv6FlowspecAddressType) Reset() {
	*x = IPv6FlowspecAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPv6FlowspecAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPv6FlowspecAddressType) ProtoMessage() {}

func (x *IPv6FlowspecAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPv6FlowspecAddressType.ProtoReflect.Descriptor instead.
func (*IPv6FlowspecAddressType) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{13}
}

func (x *IPv6FlowspecAddressType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BgpAddrtype struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Afi string `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	// IPv4 Addr
	Ipv4Address string `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	// IPv4 Mcast Addr
	Ipv4McastAddress string `protobuf:"bytes,3,opt,name=ipv4_mcast_address,json=ipv4McastAddress,proto3" json:"ipv4_mcast_address,omitempty"`
	// IPv4 Label Addr
	Ipv4LabelAddress string `protobuf:"bytes,4,opt,name=ipv4_label_address,json=ipv4LabelAddress,proto3" json:"ipv4_label_address,omitempty"`
	// IPv4 Tunnel
	Ipv4TunnelAddress *IPV4TunnelAddressType `protobuf:"bytes,5,opt,name=ipv4_tunnel_address,json=ipv4TunnelAddress,proto3" json:"ipv4_tunnel_address,omitempty"`
	// IPv4 MDT Addr
	Ipv4MdtAddress *IPV4MDTAddressType `protobuf:"bytes,6,opt,name=ipv4_mdt_address,json=ipv4MdtAddress,proto3" json:"ipv4_mdt_address,omitempty"`
	// IPv4 VPN Addr
	Ipv4VpnAddress string `protobuf:"bytes,7,opt,name=ipv4_vpn_address,json=ipv4VpnAddress,proto3" json:"ipv4_vpn_address,omitempty"`
	// IPv4 VPN Mcast Addr
	Ipv4VpnaMcastddress string `protobuf:"bytes,8,opt,name=ipv4_vpna_mcastddress,json=ipv4VpnaMcastddress,proto3" json:"ipv4_vpna_mcastddress,omitempty"`
	// IPV6 Addr
	Ipv6Address *IPV6AddressType `protobuf:"bytes,9,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	// IPV6 Mcast Addr
	Ipv6McastAddress *IPV6AddressType `protobuf:"bytes,10,opt,name=ipv6_mcast_address,json=ipv6McastAddress,proto3" json:"ipv6_mcast_address,omitempty"`
	// IPv6 Label Addr
	Ipv6LabelAddress *IPV6AddressType `protobuf:"bytes,11,opt,name=ipv6_label_address,json=ipv6LabelAddress,proto3" json:"ipv6_label_address,omitempty"`
	// IPv6 VPN Addr
	Ipv6VpnAddress *IPV6AddressType `protobuf:"bytes,12,opt,name=ipv6_vpn_address,json=ipv6VpnAddress,proto3" json:"ipv6_vpn_address,omitempty"`
	// IPv6 VPN Mcast Addr
	Ipv6VpnMcastAddress *IPV6AddressType `protobuf:"bytes,13,opt,name=ipv6_vpn_mcast_address,json=ipv6VpnMcastAddress,proto3" json:"ipv6_vpn_mcast_address,omitempty"`
	// L2VPN VPLS Addr
	L2VpnvplsAddress *BgpL2VpnAddrT `protobuf:"bytes,14,opt,name=l2_vpnvpls_address,json=l2VpnvplsAddress,proto3" json:"l2_vpnvpls_address,omitempty"`
	// RT Constrt Addr
	RtConstraintAddress *RTConstraintAddressType `protobuf:"bytes,15,opt,name=rt_constraint_address,json=rtConstraintAddress,proto3" json:"rt_constraint_address,omitempty"`
	// MVPN addr
	Ipv6MvpnAddress *IPV6MVPNAddressType `protobuf:"bytes,16,opt,name=ipv6_mvpn_address,json=ipv6MvpnAddress,proto3" json:"ipv6_mvpn_address,omitempty"`
	// MVPN4 addr
	Ipv4MvpnAddress *IPV4MVPNAddressType `protobuf:"bytes,17,opt,name=ipv4_mvpn_address,json=ipv4MvpnAddress,proto3" json:"ipv4_mvpn_address,omitempty"`
	// L2VPN EVPN Addr
	L2VpnEvpnAddress *L2VPNEVPNAddressType `protobuf:"bytes,18,opt,name=l2_vpn_evpn_address,json=l2VpnEvpnAddress,proto3" json:"l2_vpn_evpn_address,omitempty"`
	// LINKSTATE LINKSTATE Addr
	LsLsAddress *LS_LSAddressType `protobuf:"bytes,19,opt,name=ls_ls_address,json=lsLsAddress,proto3" json:"ls_ls_address,omitempty"`
	// L2VPN MSPW Addr
	L2VpnMspwAddress *BgpL2VpnMspwAddrT `protobuf:"bytes,20,opt,name=l2_vpn_mspw_address,json=l2VpnMspwAddress,proto3" json:"l2_vpn_mspw_address,omitempty"`
	// IPV4 Flowspec Addr
	Ipv4FlowspecAddress *IPv4FlowspecAddressType `protobuf:"bytes,21,opt,name=ipv4_flowspec_address,json=ipv4FlowspecAddress,proto3" json:"ipv4_flowspec_address,omitempty"`
	// IPV6 Flowspec Addr
	Ipv6FlowspecAddress *IPv6FlowspecAddressType `protobuf:"bytes,22,opt,name=ipv6_flowspec_address,json=ipv6FlowspecAddress,proto3" json:"ipv6_flowspec_address,omitempty"`
	// IPV4 VPN Flowspec Addr
	Ipv4VpnFlowspecAddress *IPv4FlowspecAddressType `protobuf:"bytes,23,opt,name=ipv4_vpn_flowspec_address,json=ipv4VpnFlowspecAddress,proto3" json:"ipv4_vpn_flowspec_address,omitempty"`
	// IPV6 VPN Flowspec Addr
	Ipv6VpnFlowspecAddress *IPv6FlowspecAddressType `protobuf:"bytes,24,opt,name=ipv6_vpn_flowspec_address,json=ipv6VpnFlowspecAddress,proto3" json:"ipv6_vpn_flowspec_address,omitempty"`
}

func (x *BgpAddrtype) Reset() {
	*x = BgpAddrtype{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpAddrtype) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpAddrtype) ProtoMessage() {}

func (x *BgpAddrtype) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpAddrtype.ProtoReflect.Descriptor instead.
func (*BgpAddrtype) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{14}
}

func (x *BgpAddrtype) GetAfi() string {
	if x != nil {
		return x.Afi
	}
	return ""
}

func (x *BgpAddrtype) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *BgpAddrtype) GetIpv4McastAddress() string {
	if x != nil {
		return x.Ipv4McastAddress
	}
	return ""
}

func (x *BgpAddrtype) GetIpv4LabelAddress() string {
	if x != nil {
		return x.Ipv4LabelAddress
	}
	return ""
}

func (x *BgpAddrtype) GetIpv4TunnelAddress() *IPV4TunnelAddressType {
	if x != nil {
		return x.Ipv4TunnelAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv4MdtAddress() *IPV4MDTAddressType {
	if x != nil {
		return x.Ipv4MdtAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv4VpnAddress() string {
	if x != nil {
		return x.Ipv4VpnAddress
	}
	return ""
}

func (x *BgpAddrtype) GetIpv4VpnaMcastddress() string {
	if x != nil {
		return x.Ipv4VpnaMcastddress
	}
	return ""
}

func (x *BgpAddrtype) GetIpv6Address() *IPV6AddressType {
	if x != nil {
		return x.Ipv6Address
	}
	return nil
}

func (x *BgpAddrtype) GetIpv6McastAddress() *IPV6AddressType {
	if x != nil {
		return x.Ipv6McastAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv6LabelAddress() *IPV6AddressType {
	if x != nil {
		return x.Ipv6LabelAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv6VpnAddress() *IPV6AddressType {
	if x != nil {
		return x.Ipv6VpnAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv6VpnMcastAddress() *IPV6AddressType {
	if x != nil {
		return x.Ipv6VpnMcastAddress
	}
	return nil
}

func (x *BgpAddrtype) GetL2VpnvplsAddress() *BgpL2VpnAddrT {
	if x != nil {
		return x.L2VpnvplsAddress
	}
	return nil
}

func (x *BgpAddrtype) GetRtConstraintAddress() *RTConstraintAddressType {
	if x != nil {
		return x.RtConstraintAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv6MvpnAddress() *IPV6MVPNAddressType {
	if x != nil {
		return x.Ipv6MvpnAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv4MvpnAddress() *IPV4MVPNAddressType {
	if x != nil {
		return x.Ipv4MvpnAddress
	}
	return nil
}

func (x *BgpAddrtype) GetL2VpnEvpnAddress() *L2VPNEVPNAddressType {
	if x != nil {
		return x.L2VpnEvpnAddress
	}
	return nil
}

func (x *BgpAddrtype) GetLsLsAddress() *LS_LSAddressType {
	if x != nil {
		return x.LsLsAddress
	}
	return nil
}

func (x *BgpAddrtype) GetL2VpnMspwAddress() *BgpL2VpnMspwAddrT {
	if x != nil {
		return x.L2VpnMspwAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv4FlowspecAddress() *IPv4FlowspecAddressType {
	if x != nil {
		return x.Ipv4FlowspecAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv6FlowspecAddress() *IPv6FlowspecAddressType {
	if x != nil {
		return x.Ipv6FlowspecAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv4VpnFlowspecAddress() *IPv4FlowspecAddressType {
	if x != nil {
		return x.Ipv4VpnFlowspecAddress
	}
	return nil
}

func (x *BgpAddrtype) GetIpv6VpnFlowspecAddress() *IPv6FlowspecAddressType {
	if x != nil {
		return x.Ipv6VpnFlowspecAddress
	}
	return nil
}

type BgpConfigEntid_ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Next entry in the list
	BgpConfigEntid_ []*BgpConfigEntid_Item `protobuf:"bytes,1,rep,name=bgp_config_entid_,json=bgpConfigEntid,proto3" json:"bgp_config_entid_,omitempty"`
}

func (x *BgpConfigEntid_) Reset() {
	*x = BgpConfigEntid_{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpConfigEntid_) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpConfigEntid_) ProtoMessage() {}

func (x *BgpConfigEntid_) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpConfigEntid_.ProtoReflect.Descriptor instead.
func (*BgpConfigEntid_) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{15}
}

func (x *BgpConfigEntid_) GetBgpConfigEntid_() []*BgpConfigEntid_Item {
	if x != nil {
		return x.BgpConfigEntid_
	}
	return nil
}

type BgpConfigEntid_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address family identfier
	AddressFamilyIdentifier uint32 `protobuf:"varint,1,opt,name=address_family_identifier,json=addressFamilyIdentifier,proto3" json:"address_family_identifier,omitempty"`
	// Entity type
	ConfigurationType string `protobuf:"bytes,2,opt,name=configuration_type,json=configurationType,proto3" json:"configuration_type,omitempty"`
	// Neighbor Address
	NeighborAddress *BgpAddrtype `protobuf:"bytes,3,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	// Group name
	GroupName string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *BgpConfigEntid_Item) Reset() {
	*x = BgpConfigEntid_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpConfigEntid_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpConfigEntid_Item) ProtoMessage() {}

func (x *BgpConfigEntid_Item) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpConfigEntid_Item.ProtoReflect.Descriptor instead.
func (*BgpConfigEntid_Item) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{16}
}

func (x *BgpConfigEntid_Item) GetAddressFamilyIdentifier() uint32 {
	if x != nil {
		return x.AddressFamilyIdentifier
	}
	return 0
}

func (x *BgpConfigEntid_Item) GetConfigurationType() string {
	if x != nil {
		return x.ConfigurationType
	}
	return ""
}

func (x *BgpConfigEntid_Item) GetNeighborAddress() *BgpAddrtype {
	if x != nil {
		return x.NeighborAddress
	}
	return nil
}

func (x *BgpConfigEntid_Item) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type BgpConfigInfo_ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TRUE if the item value is a configured value different from the default
	IsItemConfigured bool `protobuf:"varint,1,opt,name=is_item_configured,json=isItemConfigured,proto3" json:"is_item_configured,omitempty"`
	// Pointer to the inheritance chain
	InheritanceChain *BgpConfigEntid_ `protobuf:"bytes,2,opt,name=inheritance_chain,json=inheritanceChain,proto3" json:"inheritance_chain,omitempty"`
}

func (x *BgpConfigInfo_) Reset() {
	*x = BgpConfigInfo_{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpConfigInfo_) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpConfigInfo_) ProtoMessage() {}

func (x *BgpConfigInfo_) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpConfigInfo_.ProtoReflect.Descriptor instead.
func (*BgpConfigInfo_) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{17}
}

func (x *BgpConfigInfo_) GetIsItemConfigured() bool {
	if x != nil {
		return x.IsItemConfigured
	}
	return false
}

func (x *BgpConfigInfo_) GetInheritanceChain() *BgpConfigEntid_ {
	if x != nil {
		return x.InheritanceChain
	}
	return nil
}

type BgpAfDep_ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasOrfCapability                          uint32          `protobuf:"varint,1,opt,name=has_orf_capability,json=hasOrfCapability,proto3" json:"has_orf_capability,omitempty"`
	IsDefaultOriginateNotDisabled             bool            `protobuf:"varint,2,opt,name=is_default_originate_not_disabled,json=isDefaultOriginateNotDisabled,proto3" json:"is_default_originate_not_disabled,omitempty"`
	DefaultOriginateRoutePolicy               string          `protobuf:"bytes,3,opt,name=default_originate_route_policy,json=defaultOriginateRoutePolicy,proto3" json:"default_originate_route_policy,omitempty"`
	MaxPrefixes                               uint32          `protobuf:"varint,4,opt,name=max_prefixes,json=maxPrefixes,proto3" json:"max_prefixes,omitempty"`
	MaxPrefixWarnThreshold                    uint32          `protobuf:"varint,5,opt,name=max_prefix_warn_threshold,json=maxPrefixWarnThreshold,proto3" json:"max_prefix_warn_threshold,omitempty"`
	IsMaxPrefixWarnOnly                       bool            `protobuf:"varint,6,opt,name=is_max_prefix_warn_only,json=isMaxPrefixWarnOnly,proto3" json:"is_max_prefix_warn_only,omitempty"`
	MaxPrefixRestartTime                      uint32          `protobuf:"varint,7,opt,name=max_prefix_restart_time,json=maxPrefixRestartTime,proto3" json:"max_prefix_restart_time,omitempty"`
	OrrRootAddress                            *BgpAddrtype    `protobuf:"bytes,8,opt,name=orr_root_address,json=orrRootAddress,proto3" json:"orr_root_address,omitempty"`
	IsMaxPrefixDiscardExtraPaths              bool            `protobuf:"varint,9,opt,name=is_max_prefix_discard_extra_paths,json=isMaxPrefixDiscardExtraPaths,proto3" json:"is_max_prefix_discard_extra_paths,omitempty"`
	IsNextHopSelfDisabled                     bool            `protobuf:"varint,10,opt,name=is_next_hop_self_disabled,json=isNextHopSelfDisabled,proto3" json:"is_next_hop_self_disabled,omitempty"`
	IsNextHopUnchanged                        bool            `protobuf:"varint,11,opt,name=is_next_hop_unchanged,json=isNextHopUnchanged,proto3" json:"is_next_hop_unchanged,omitempty"`
	PermanentNetwork                          bool            `protobuf:"varint,12,opt,name=permanent_network,json=permanentNetwork,proto3" json:"permanent_network,omitempty"`
	RoutePolicyIn                             string          `protobuf:"bytes,13,opt,name=route_policy_in,json=routePolicyIn,proto3" json:"route_policy_in,omitempty"`
	RoutePolicyOut                            string          `protobuf:"bytes,14,opt,name=route_policy_out,json=routePolicyOut,proto3" json:"route_policy_out,omitempty"`
	PrefixOrfFilter                           string          `protobuf:"bytes,15,opt,name=prefix_orf_filter,json=prefixOrfFilter,proto3" json:"prefix_orf_filter,omitempty"`
	RemovePrivateAsOut                        bool            `protobuf:"varint,16,opt,name=remove_private_as_out,json=removePrivateAsOut,proto3" json:"remove_private_as_out,omitempty"`
	EntireAspathOut                           bool            `protobuf:"varint,17,opt,name=entire_aspath_out,json=entireAspathOut,proto3" json:"entire_aspath_out,omitempty"`
	RemovePrivateAsin                         bool            `protobuf:"varint,18,opt,name=remove_private_asin,json=removePrivateAsin,proto3" json:"remove_private_asin,omitempty"`
	EntireAspathIn                            bool            `protobuf:"varint,19,opt,name=entire_aspath_in,json=entireAspathIn,proto3" json:"entire_aspath_in,omitempty"`
	ClientRouteReflector                      bool            `protobuf:"varint,20,opt,name=client_route_reflector,json=clientRouteReflector,proto3" json:"client_route_reflector,omitempty"`
	AcceptRouteLegacyPeRt                     bool            `protobuf:"varint,21,opt,name=accept_route_legacy_pe_rt,json=acceptRouteLegacyPeRt,proto3" json:"accept_route_legacy_pe_rt,omitempty"`
	IsAfEnabled                               bool            `protobuf:"varint,22,opt,name=is_af_enabled,json=isAfEnabled,proto3" json:"is_af_enabled,omitempty"`
	SendCommunityAttribute                    bool            `protobuf:"varint,23,opt,name=send_community_attribute,json=sendCommunityAttribute,proto3" json:"send_community_attribute,omitempty"`
	SendGracefulShutCommunityAttributes       bool            `protobuf:"varint,24,opt,name=send_graceful_shut_community_attributes,json=sendGracefulShutCommunityAttributes,proto3" json:"send_graceful_shut_community_attributes,omitempty"`
	SendExtendedCommunityAttribute            bool            `protobuf:"varint,25,opt,name=send_extended_community_attribute,json=sendExtendedCommunityAttribute,proto3" json:"send_extended_community_attribute,omitempty"`
	SoftReconfigNotDisabled                   bool            `protobuf:"varint,26,opt,name=soft_reconfig_not_disabled,json=softReconfigNotDisabled,proto3" json:"soft_reconfig_not_disabled,omitempty"`
	AlwayUseSoftReconfig                      bool            `protobuf:"varint,27,opt,name=alway_use_soft_reconfig,json=alwayUseSoftReconfig,proto3" json:"alway_use_soft_reconfig,omitempty"`
	SiteOfOrigin                              string          `protobuf:"bytes,28,opt,name=site_of_origin,json=siteOfOrigin,proto3" json:"site_of_origin,omitempty"`
	DefaultWeight                             uint32          `protobuf:"varint,29,opt,name=default_weight,json=defaultWeight,proto3" json:"default_weight,omitempty"`
	DefaultAllowas                            uint32          `protobuf:"varint,30,opt,name=default_allowas,json=defaultAllowas,proto3" json:"default_allowas,omitempty"`
	AfLongLivedGracefulRestartStaleTimeSend   uint32          `protobuf:"varint,31,opt,name=af_long_lived_graceful_restart_stale_time_send,json=afLongLivedGracefulRestartStaleTimeSend,proto3" json:"af_long_lived_graceful_restart_stale_time_send,omitempty"`
	AfLongLivedGracefulRestartStaleTimeAccept uint32          `protobuf:"varint,32,opt,name=af_long_lived_graceful_restart_stale_time_accept,json=afLongLivedGracefulRestartStaleTimeAccept,proto3" json:"af_long_lived_graceful_restart_stale_time_accept,omitempty"`
	AfLongLivedGracefulRestartCapable         uint32          `protobuf:"varint,33,opt,name=af_long_lived_graceful_restart_capable,json=afLongLivedGracefulRestartCapable,proto3" json:"af_long_lived_graceful_restart_capable,omitempty"`
	IsAsOverrideDisabled                      bool            `protobuf:"varint,34,opt,name=is_as_override_disabled,json=isAsOverrideDisabled,proto3" json:"is_as_override_disabled,omitempty"`
	IsAigpEnabled                             bool            `protobuf:"varint,35,opt,name=is_aigp_enabled,json=isAigpEnabled,proto3" json:"is_aigp_enabled,omitempty"`
	IsAigpCostCommunityEnabled                bool            `protobuf:"varint,36,opt,name=is_aigp_cost_community_enabled,json=isAigpCostCommunityEnabled,proto3" json:"is_aigp_cost_community_enabled,omitempty"`
	IsAigpCostCommunityId                     uint32          `protobuf:"varint,37,opt,name=is_aigp_cost_community_id,json=isAigpCostCommunityId,proto3" json:"is_aigp_cost_community_id,omitempty"`
	IsAigpCostCommunityTransitive             uint32          `protobuf:"varint,38,opt,name=is_aigp_cost_community_transitive,json=isAigpCostCommunityTransitive,proto3" json:"is_aigp_cost_community_transitive,omitempty"`
	AigpCostCommunityPoi                      uint32          `protobuf:"varint,39,opt,name=aigp_cost_community_poi,json=aigpCostCommunityPoi,proto3" json:"aigp_cost_community_poi,omitempty"`
	IsAigpMedEnabled                          bool            `protobuf:"varint,40,opt,name=is_aigp_med_enabled,json=isAigpMedEnabled,proto3" json:"is_aigp_med_enabled,omitempty"`
	AcceptOwn                                 bool            `protobuf:"varint,41,opt,name=accept_own,json=acceptOwn,proto3" json:"accept_own,omitempty"`
	Multipath                                 bool            `protobuf:"varint,42,opt,name=multipath,proto3" json:"multipath,omitempty"`
	IsFspecValidEnabled                       bool            `protobuf:"varint,43,opt,name=is_fspec_valid_enabled,json=isFspecValidEnabled,proto3" json:"is_fspec_valid_enabled,omitempty"`
	IsNextHopUnchangedMpath                   bool            `protobuf:"varint,44,opt,name=is_next_hop_unchanged_mpath,json=isNextHopUnchangedMpath,proto3" json:"is_next_hop_unchanged_mpath,omitempty"`
	IsSendMcastAttrEnabled                    bool            `protobuf:"varint,45,opt,name=is_send_mcast_attr_enabled,json=isSendMcastAttrEnabled,proto3" json:"is_send_mcast_attr_enabled,omitempty"`
	AdvertiseV4                               uint32          `protobuf:"varint,46,opt,name=advertise_v4,json=advertiseV4,proto3" json:"advertise_v4,omitempty"`
	AdvertiseV6                               uint32          `protobuf:"varint,47,opt,name=advertise_v6,json=advertiseV6,proto3" json:"advertise_v6,omitempty"`
	AdvertiseL2Vpnevpn                        uint32          `protobuf:"varint,48,opt,name=advertise_l2_vpnevpn,json=advertiseL2Vpnevpn,proto3" json:"advertise_l2_vpnevpn,omitempty"`
	AdvertiseDisable                          uint32          `protobuf:"varint,49,opt,name=advertise_disable,json=advertiseDisable,proto3" json:"advertise_disable,omitempty"`
	AdvertiseDefVrfImpDisableV4               uint32          `protobuf:"varint,50,opt,name=advertise_def_vrf_imp_disable_v4,json=advertiseDefVrfImpDisableV4,proto3" json:"advertise_def_vrf_imp_disable_v4,omitempty"`
	AdvertiseDefVrfImpDisableV6               uint32          `protobuf:"varint,51,opt,name=advertise_def_vrf_imp_disable_v6,json=advertiseDefVrfImpDisableV6,proto3" json:"advertise_def_vrf_imp_disable_v6,omitempty"`
	EncapsulationType                         uint32          `protobuf:"varint,52,opt,name=encapsulation_type,json=encapsulationType,proto3" json:"encapsulation_type,omitempty"`
	Import                                    bool            `protobuf:"varint,53,opt,name=import,proto3" json:"import,omitempty"`
	ImportStitching                           bool            `protobuf:"varint,54,opt,name=import_stitching,json=importStitching,proto3" json:"import_stitching,omitempty"`
	ImportReoriginate                         bool            `protobuf:"varint,55,opt,name=import_reoriginate,json=importReoriginate,proto3" json:"import_reoriginate,omitempty"`
	ImportReoriginateStitching                bool            `protobuf:"varint,56,opt,name=import_reoriginate_stitching,json=importReoriginateStitching,proto3" json:"import_reoriginate_stitching,omitempty"`
	AdvertiseLocalLabeledRoute                uint32          `protobuf:"varint,57,opt,name=advertise_local_labeled_route,json=advertiseLocalLabeledRoute,proto3" json:"advertise_local_labeled_route,omitempty"`
	OrfCapabilityInfo                         *BgpConfigInfo_ `protobuf:"bytes,58,opt,name=orf_capability_info,json=orfCapabilityInfo,proto3" json:"orf_capability_info,omitempty"`
	DefaultOriginateInfo                      *BgpConfigInfo_ `protobuf:"bytes,59,opt,name=default_originate_info,json=defaultOriginateInfo,proto3" json:"default_originate_info,omitempty"`
	MaxPrefixesInfo                           *BgpConfigInfo_ `protobuf:"bytes,60,opt,name=max_prefixes_info,json=maxPrefixesInfo,proto3" json:"max_prefixes_info,omitempty"`
	OrrInfo                                   *BgpConfigInfo_ `protobuf:"bytes,61,opt,name=orr_info,json=orrInfo,proto3" json:"orr_info,omitempty"`
	NextHopSelfInfo                           *BgpConfigInfo_ `protobuf:"bytes,62,opt,name=next_hop_self_info,json=nextHopSelfInfo,proto3" json:"next_hop_self_info,omitempty"`
	NextHopUnchangedInfo                      *BgpConfigInfo_ `protobuf:"bytes,63,opt,name=next_hop_unchanged_info,json=nextHopUnchangedInfo,proto3" json:"next_hop_unchanged_info,omitempty"`
	RoutePolicyInInfo                         *BgpConfigInfo_ `protobuf:"bytes,64,opt,name=route_policy_in_info,json=routePolicyInInfo,proto3" json:"route_policy_in_info,omitempty"`
	RoutePolicyOutInfo                        *BgpConfigInfo_ `protobuf:"bytes,65,opt,name=route_policy_out_info,json=routePolicyOutInfo,proto3" json:"route_policy_out_info,omitempty"`
	PrefixFilterInfo                          *BgpConfigInfo_ `protobuf:"bytes,66,opt,name=prefix_filter_info,json=prefixFilterInfo,proto3" json:"prefix_filter_info,omitempty"`
	RemovePrivateAsInfo                       *BgpConfigInfo_ `protobuf:"bytes,67,opt,name=remove_private_as_info,json=removePrivateAsInfo,proto3" json:"remove_private_as_info,omitempty"`
	RemovePrivateAsInInfo                     *BgpConfigInfo_ `protobuf:"bytes,68,opt,name=remove_private_as_in_info,json=removePrivateAsInInfo,proto3" json:"remove_private_as_in_info,omitempty"`
	RouteReflectorInfo                        *BgpConfigInfo_ `protobuf:"bytes,69,opt,name=route_reflector_info,json=routeReflectorInfo,proto3" json:"route_reflector_info,omitempty"`
	LegacyPeRtInfo                            *BgpConfigInfo_ `protobuf:"bytes,70,opt,name=legacy_pe_rt_info,json=legacyPeRtInfo,proto3" json:"legacy_pe_rt_info,omitempty"`
	AfEnabledInfo                             *BgpConfigInfo_ `protobuf:"bytes,71,opt,name=af_enabled_info,json=afEnabledInfo,proto3" json:"af_enabled_info,omitempty"`
	SendCommunityInfo                         *BgpConfigInfo_ `protobuf:"bytes,72,opt,name=send_community_info,json=sendCommunityInfo,proto3" json:"send_community_info,omitempty"`
	SendGracefulShutdownCommunityInfo         *BgpConfigInfo_ `protobuf:"bytes,73,opt,name=send_graceful_shutdown_community_info,json=sendGracefulShutdownCommunityInfo,proto3" json:"send_graceful_shutdown_community_info,omitempty"`
	SendExtendedCommunityInfo                 *BgpConfigInfo_ `protobuf:"bytes,74,opt,name=send_extended_community_info,json=sendExtendedCommunityInfo,proto3" json:"send_extended_community_info,omitempty"`
	SoftReconfigInfo                          *BgpConfigInfo_ `protobuf:"bytes,75,opt,name=soft_reconfig_info,json=softReconfigInfo,proto3" json:"soft_reconfig_info,omitempty"`
	SoOInfo                                   *BgpConfigInfo_ `protobuf:"bytes,76,opt,name=so_o_info,json=soOInfo,proto3" json:"so_o_info,omitempty"`
	WeightInfo                                *BgpConfigInfo_ `protobuf:"bytes,77,opt,name=weight_info,json=weightInfo,proto3" json:"weight_info,omitempty"`
	AllowasInInfo                             *BgpConfigInfo_ `protobuf:"bytes,78,opt,name=allowas_in_info,json=allowasInInfo,proto3" json:"allowas_in_info,omitempty"`
	AfLongLivedGracefulStartStaleTimeInfo     *BgpConfigInfo_ `protobuf:"bytes,79,opt,name=af_long_lived_graceful_start_stale_time_info,json=afLongLivedGracefulStartStaleTimeInfo,proto3" json:"af_long_lived_graceful_start_stale_time_info,omitempty"`
	AfLongLivedGracefulStartCapableInfo       *BgpConfigInfo_ `protobuf:"bytes,80,opt,name=af_long_lived_graceful_start_capable_info,json=afLongLivedGracefulStartCapableInfo,proto3" json:"af_long_lived_graceful_start_capable_info,omitempty"`
	AsOverrideInfo                            *BgpConfigInfo_ `protobuf:"bytes,81,opt,name=as_override_info,json=asOverrideInfo,proto3" json:"as_override_info,omitempty"`
	AigpInfo                                  *BgpConfigInfo_ `protobuf:"bytes,82,opt,name=aigp_info,json=aigpInfo,proto3" json:"aigp_info,omitempty"`
	AigpCostCommunityInfo                     *BgpConfigInfo_ `protobuf:"bytes,83,opt,name=aigp_cost_community_info,json=aigpCostCommunityInfo,proto3" json:"aigp_cost_community_info,omitempty"`
	AigpMed                                   *BgpConfigInfo_ `protobuf:"bytes,84,opt,name=aigp_med,json=aigpMed,proto3" json:"aigp_med,omitempty"`
	AcceptOwnInfo                             *BgpConfigInfo_ `protobuf:"bytes,85,opt,name=accept_own_info,json=acceptOwnInfo,proto3" json:"accept_own_info,omitempty"`
	MultipathInfo                             *BgpConfigInfo_ `protobuf:"bytes,86,opt,name=multipath_info,json=multipathInfo,proto3" json:"multipath_info,omitempty"`
	FspecValidInfo                            *BgpConfigInfo_ `protobuf:"bytes,87,opt,name=fspec_valid_info,json=fspecValidInfo,proto3" json:"fspec_valid_info,omitempty"`
	NextHopUnchangedMpathInfo                 *BgpConfigInfo_ `protobuf:"bytes,88,opt,name=next_hop_unchanged_mpath_info,json=nextHopUnchangedMpathInfo,proto3" json:"next_hop_unchanged_mpath_info,omitempty"`
	PermanentNetworkInfo                      *BgpConfigInfo_ `protobuf:"bytes,89,opt,name=permanent_network_info,json=permanentNetworkInfo,proto3" json:"permanent_network_info,omitempty"`
	SendMcastAttrInfo                         *BgpConfigInfo_ `protobuf:"bytes,90,opt,name=send_mcast_attr_info,json=sendMcastAttrInfo,proto3" json:"send_mcast_attr_info,omitempty"`
	AdvertiseV4AfiInfo                        *BgpConfigInfo_ `protobuf:"bytes,91,opt,name=advertise_v4_afi_info,json=advertiseV4AfiInfo,proto3" json:"advertise_v4_afi_info,omitempty"`
	AdvertiseV6AfiInfo                        *BgpConfigInfo_ `protobuf:"bytes,92,opt,name=advertise_v6_afi_info,json=advertiseV6AfiInfo,proto3" json:"advertise_v6_afi_info,omitempty"`
	AdvertiseL2VpnevpnAfiInfo                 *BgpConfigInfo_ `protobuf:"bytes,93,opt,name=advertise_l2_vpnevpn_afi_info,json=advertiseL2VpnevpnAfiInfo,proto3" json:"advertise_l2_vpnevpn_afi_info,omitempty"`
	AdvertiseDisInfo                          *BgpConfigInfo_ `protobuf:"bytes,94,opt,name=advertise_dis_info,json=advertiseDisInfo,proto3" json:"advertise_dis_info,omitempty"`
	AdvertiseDefVrfImpDisableAfiV4Info        *BgpConfigInfo_ `protobuf:"bytes,95,opt,name=advertise_def_vrf_imp_disable_afi_v4_info,json=advertiseDefVrfImpDisableAfiV4Info,proto3" json:"advertise_def_vrf_imp_disable_afi_v4_info,omitempty"`
	AdvertiseDefVrfImpDisableAfiV6Info        *BgpConfigInfo_ `protobuf:"bytes,96,opt,name=advertise_def_vrf_imp_disable_afi_v6_info,json=advertiseDefVrfImpDisableAfiV6Info,proto3" json:"advertise_def_vrf_imp_disable_afi_v6_info,omitempty"`
	AfEncapsulationTypeInfo                   *BgpConfigInfo_ `protobuf:"bytes,97,opt,name=af_encapsulation_type_info,json=afEncapsulationTypeInfo,proto3" json:"af_encapsulation_type_info,omitempty"`
	ImportAfiInfo                             *BgpConfigInfo_ `protobuf:"bytes,98,opt,name=import_afi_info,json=importAfiInfo,proto3" json:"import_afi_info,omitempty"`
	AdvertiseLocalLabeledRouteInfo            *BgpConfigInfo_ `protobuf:"bytes,99,opt,name=advertise_local_labeled_route_info,json=advertiseLocalLabeledRouteInfo,proto3" json:"advertise_local_labeled_route_info,omitempty"`
}

func (x *BgpAfDep_) Reset() {
	*x = BgpAfDep_{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpAfDep_) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpAfDep_) ProtoMessage() {}

func (x *BgpAfDep_) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpAfDep_.ProtoReflect.Descriptor instead.
func (*BgpAfDep_) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{18}
}

func (x *BgpAfDep_) GetHasOrfCapability() uint32 {
	if x != nil {
		return x.HasOrfCapability
	}
	return 0
}

func (x *BgpAfDep_) GetIsDefaultOriginateNotDisabled() bool {
	if x != nil {
		return x.IsDefaultOriginateNotDisabled
	}
	return false
}

func (x *BgpAfDep_) GetDefaultOriginateRoutePolicy() string {
	if x != nil {
		return x.DefaultOriginateRoutePolicy
	}
	return ""
}

func (x *BgpAfDep_) GetMaxPrefixes() uint32 {
	if x != nil {
		return x.MaxPrefixes
	}
	return 0
}

func (x *BgpAfDep_) GetMaxPrefixWarnThreshold() uint32 {
	if x != nil {
		return x.MaxPrefixWarnThreshold
	}
	return 0
}

func (x *BgpAfDep_) GetIsMaxPrefixWarnOnly() bool {
	if x != nil {
		return x.IsMaxPrefixWarnOnly
	}
	return false
}

func (x *BgpAfDep_) GetMaxPrefixRestartTime() uint32 {
	if x != nil {
		return x.MaxPrefixRestartTime
	}
	return 0
}

func (x *BgpAfDep_) GetOrrRootAddress() *BgpAddrtype {
	if x != nil {
		return x.OrrRootAddress
	}
	return nil
}

func (x *BgpAfDep_) GetIsMaxPrefixDiscardExtraPaths() bool {
	if x != nil {
		return x.IsMaxPrefixDiscardExtraPaths
	}
	return false
}

func (x *BgpAfDep_) GetIsNextHopSelfDisabled() bool {
	if x != nil {
		return x.IsNextHopSelfDisabled
	}
	return false
}

func (x *BgpAfDep_) GetIsNextHopUnchanged() bool {
	if x != nil {
		return x.IsNextHopUnchanged
	}
	return false
}

func (x *BgpAfDep_) GetPermanentNetwork() bool {
	if x != nil {
		return x.PermanentNetwork
	}
	return false
}

func (x *BgpAfDep_) GetRoutePolicyIn() string {
	if x != nil {
		return x.RoutePolicyIn
	}
	return ""
}

func (x *BgpAfDep_) GetRoutePolicyOut() string {
	if x != nil {
		return x.RoutePolicyOut
	}
	return ""
}

func (x *BgpAfDep_) GetPrefixOrfFilter() string {
	if x != nil {
		return x.PrefixOrfFilter
	}
	return ""
}

func (x *BgpAfDep_) GetRemovePrivateAsOut() bool {
	if x != nil {
		return x.RemovePrivateAsOut
	}
	return false
}

func (x *BgpAfDep_) GetEntireAspathOut() bool {
	if x != nil {
		return x.EntireAspathOut
	}
	return false
}

func (x *BgpAfDep_) GetRemovePrivateAsin() bool {
	if x != nil {
		return x.RemovePrivateAsin
	}
	return false
}

func (x *BgpAfDep_) GetEntireAspathIn() bool {
	if x != nil {
		return x.EntireAspathIn
	}
	return false
}

func (x *BgpAfDep_) GetClientRouteReflector() bool {
	if x != nil {
		return x.ClientRouteReflector
	}
	return false
}

func (x *BgpAfDep_) GetAcceptRouteLegacyPeRt() bool {
	if x != nil {
		return x.AcceptRouteLegacyPeRt
	}
	return false
}

func (x *BgpAfDep_) GetIsAfEnabled() bool {
	if x != nil {
		return x.IsAfEnabled
	}
	return false
}

func (x *BgpAfDep_) GetSendCommunityAttribute() bool {
	if x != nil {
		return x.SendCommunityAttribute
	}
	return false
}

func (x *BgpAfDep_) GetSendGracefulShutCommunityAttributes() bool {
	if x != nil {
		return x.SendGracefulShutCommunityAttributes
	}
	return false
}

func (x *BgpAfDep_) GetSendExtendedCommunityAttribute() bool {
	if x != nil {
		return x.SendExtendedCommunityAttribute
	}
	return false
}

func (x *BgpAfDep_) GetSoftReconfigNotDisabled() bool {
	if x != nil {
		return x.SoftReconfigNotDisabled
	}
	return false
}

func (x *BgpAfDep_) GetAlwayUseSoftReconfig() bool {
	if x != nil {
		return x.AlwayUseSoftReconfig
	}
	return false
}

func (x *BgpAfDep_) GetSiteOfOrigin() string {
	if x != nil {
		return x.SiteOfOrigin
	}
	return ""
}

func (x *BgpAfDep_) GetDefaultWeight() uint32 {
	if x != nil {
		return x.DefaultWeight
	}
	return 0
}

func (x *BgpAfDep_) GetDefaultAllowas() uint32 {
	if x != nil {
		return x.DefaultAllowas
	}
	return 0
}

func (x *BgpAfDep_) GetAfLongLivedGracefulRestartStaleTimeSend() uint32 {
	if x != nil {
		return x.AfLongLivedGracefulRestartStaleTimeSend
	}
	return 0
}

func (x *BgpAfDep_) GetAfLongLivedGracefulRestartStaleTimeAccept() uint32 {
	if x != nil {
		return x.AfLongLivedGracefulRestartStaleTimeAccept
	}
	return 0
}

func (x *BgpAfDep_) GetAfLongLivedGracefulRestartCapable() uint32 {
	if x != nil {
		return x.AfLongLivedGracefulRestartCapable
	}
	return 0
}

func (x *BgpAfDep_) GetIsAsOverrideDisabled() bool {
	if x != nil {
		return x.IsAsOverrideDisabled
	}
	return false
}

func (x *BgpAfDep_) GetIsAigpEnabled() bool {
	if x != nil {
		return x.IsAigpEnabled
	}
	return false
}

func (x *BgpAfDep_) GetIsAigpCostCommunityEnabled() bool {
	if x != nil {
		return x.IsAigpCostCommunityEnabled
	}
	return false
}

func (x *BgpAfDep_) GetIsAigpCostCommunityId() uint32 {
	if x != nil {
		return x.IsAigpCostCommunityId
	}
	return 0
}

func (x *BgpAfDep_) GetIsAigpCostCommunityTransitive() uint32 {
	if x != nil {
		return x.IsAigpCostCommunityTransitive
	}
	return 0
}

func (x *BgpAfDep_) GetAigpCostCommunityPoi() uint32 {
	if x != nil {
		return x.AigpCostCommunityPoi
	}
	return 0
}

func (x *BgpAfDep_) GetIsAigpMedEnabled() bool {
	if x != nil {
		return x.IsAigpMedEnabled
	}
	return false
}

func (x *BgpAfDep_) GetAcceptOwn() bool {
	if x != nil {
		return x.AcceptOwn
	}
	return false
}

func (x *BgpAfDep_) GetMultipath() bool {
	if x != nil {
		return x.Multipath
	}
	return false
}

func (x *BgpAfDep_) GetIsFspecValidEnabled() bool {
	if x != nil {
		return x.IsFspecValidEnabled
	}
	return false
}

func (x *BgpAfDep_) GetIsNextHopUnchangedMpath() bool {
	if x != nil {
		return x.IsNextHopUnchangedMpath
	}
	return false
}

func (x *BgpAfDep_) GetIsSendMcastAttrEnabled() bool {
	if x != nil {
		return x.IsSendMcastAttrEnabled
	}
	return false
}

func (x *BgpAfDep_) GetAdvertiseV4() uint32 {
	if x != nil {
		return x.AdvertiseV4
	}
	return 0
}

func (x *BgpAfDep_) GetAdvertiseV6() uint32 {
	if x != nil {
		return x.AdvertiseV6
	}
	return 0
}

func (x *BgpAfDep_) GetAdvertiseL2Vpnevpn() uint32 {
	if x != nil {
		return x.AdvertiseL2Vpnevpn
	}
	return 0
}

func (x *BgpAfDep_) GetAdvertiseDisable() uint32 {
	if x != nil {
		return x.AdvertiseDisable
	}
	return 0
}

func (x *BgpAfDep_) GetAdvertiseDefVrfImpDisableV4() uint32 {
	if x != nil {
		return x.AdvertiseDefVrfImpDisableV4
	}
	return 0
}

func (x *BgpAfDep_) GetAdvertiseDefVrfImpDisableV6() uint32 {
	if x != nil {
		return x.AdvertiseDefVrfImpDisableV6
	}
	return 0
}

func (x *BgpAfDep_) GetEncapsulationType() uint32 {
	if x != nil {
		return x.EncapsulationType
	}
	return 0
}

func (x *BgpAfDep_) GetImport() bool {
	if x != nil {
		return x.Import
	}
	return false
}

func (x *BgpAfDep_) GetImportStitching() bool {
	if x != nil {
		return x.ImportStitching
	}
	return false
}

func (x *BgpAfDep_) GetImportReoriginate() bool {
	if x != nil {
		return x.ImportReoriginate
	}
	return false
}

func (x *BgpAfDep_) GetImportReoriginateStitching() bool {
	if x != nil {
		return x.ImportReoriginateStitching
	}
	return false
}

func (x *BgpAfDep_) GetAdvertiseLocalLabeledRoute() uint32 {
	if x != nil {
		return x.AdvertiseLocalLabeledRoute
	}
	return 0
}

func (x *BgpAfDep_) GetOrfCapabilityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.OrfCapabilityInfo
	}
	return nil
}

func (x *BgpAfDep_) GetDefaultOriginateInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.DefaultOriginateInfo
	}
	return nil
}

func (x *BgpAfDep_) GetMaxPrefixesInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.MaxPrefixesInfo
	}
	return nil
}

func (x *BgpAfDep_) GetOrrInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.OrrInfo
	}
	return nil
}

func (x *BgpAfDep_) GetNextHopSelfInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NextHopSelfInfo
	}
	return nil
}

func (x *BgpAfDep_) GetNextHopUnchangedInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NextHopUnchangedInfo
	}
	return nil
}

func (x *BgpAfDep_) GetRoutePolicyInInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.RoutePolicyInInfo
	}
	return nil
}

func (x *BgpAfDep_) GetRoutePolicyOutInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.RoutePolicyOutInfo
	}
	return nil
}

func (x *BgpAfDep_) GetPrefixFilterInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.PrefixFilterInfo
	}
	return nil
}

func (x *BgpAfDep_) GetRemovePrivateAsInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.RemovePrivateAsInfo
	}
	return nil
}

func (x *BgpAfDep_) GetRemovePrivateAsInInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.RemovePrivateAsInInfo
	}
	return nil
}

func (x *BgpAfDep_) GetRouteReflectorInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.RouteReflectorInfo
	}
	return nil
}

func (x *BgpAfDep_) GetLegacyPeRtInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.LegacyPeRtInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAfEnabledInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AfEnabledInfo
	}
	return nil
}

func (x *BgpAfDep_) GetSendCommunityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SendCommunityInfo
	}
	return nil
}

func (x *BgpAfDep_) GetSendGracefulShutdownCommunityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SendGracefulShutdownCommunityInfo
	}
	return nil
}

func (x *BgpAfDep_) GetSendExtendedCommunityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SendExtendedCommunityInfo
	}
	return nil
}

func (x *BgpAfDep_) GetSoftReconfigInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SoftReconfigInfo
	}
	return nil
}

func (x *BgpAfDep_) GetSoOInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SoOInfo
	}
	return nil
}

func (x *BgpAfDep_) GetWeightInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.WeightInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAllowasInInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AllowasInInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAfLongLivedGracefulStartStaleTimeInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AfLongLivedGracefulStartStaleTimeInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAfLongLivedGracefulStartCapableInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AfLongLivedGracefulStartCapableInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAsOverrideInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AsOverrideInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAigpInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AigpInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAigpCostCommunityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AigpCostCommunityInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAigpMed() *BgpConfigInfo_ {
	if x != nil {
		return x.AigpMed
	}
	return nil
}

func (x *BgpAfDep_) GetAcceptOwnInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AcceptOwnInfo
	}
	return nil
}

func (x *BgpAfDep_) GetMultipathInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.MultipathInfo
	}
	return nil
}

func (x *BgpAfDep_) GetFspecValidInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.FspecValidInfo
	}
	return nil
}

func (x *BgpAfDep_) GetNextHopUnchangedMpathInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NextHopUnchangedMpathInfo
	}
	return nil
}

func (x *BgpAfDep_) GetPermanentNetworkInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.PermanentNetworkInfo
	}
	return nil
}

func (x *BgpAfDep_) GetSendMcastAttrInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SendMcastAttrInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAdvertiseV4AfiInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AdvertiseV4AfiInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAdvertiseV6AfiInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AdvertiseV6AfiInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAdvertiseL2VpnevpnAfiInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AdvertiseL2VpnevpnAfiInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAdvertiseDisInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AdvertiseDisInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAdvertiseDefVrfImpDisableAfiV4Info() *BgpConfigInfo_ {
	if x != nil {
		return x.AdvertiseDefVrfImpDisableAfiV4Info
	}
	return nil
}

func (x *BgpAfDep_) GetAdvertiseDefVrfImpDisableAfiV6Info() *BgpConfigInfo_ {
	if x != nil {
		return x.AdvertiseDefVrfImpDisableAfiV6Info
	}
	return nil
}

func (x *BgpAfDep_) GetAfEncapsulationTypeInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AfEncapsulationTypeInfo
	}
	return nil
}

func (x *BgpAfDep_) GetImportAfiInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.ImportAfiInfo
	}
	return nil
}

func (x *BgpAfDep_) GetAdvertiseLocalLabeledRouteInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AdvertiseLocalLabeledRouteInfo
	}
	return nil
}

type BgpAfIndep_ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First half of Remote ASN
	RemoteAsNumberXx uint32 `protobuf:"varint,1,opt,name=remote_as_number_xx,json=remoteAsNumberXx,proto3" json:"remote_as_number_xx,omitempty"`
	// Second half of Remote ASN
	RemoteAsNumberYy uint32 `protobuf:"varint,2,opt,name=remote_as_number_yy,json=remoteAsNumberYy,proto3" json:"remote_as_number_yy,omitempty"`
	// Configured speaker ID
	ConfiguredSpeakerId uint32 `protobuf:"varint,3,opt,name=configured_speaker_id,json=configuredSpeakerId,proto3" json:"configured_speaker_id,omitempty"`
	// Maximum Segment Size
	TcpMss uint32 `protobuf:"varint,4,opt,name=tcp_mss,json=tcpMss,proto3" json:"tcp_mss,omitempty"`
	// Minimum advertisement interval, secs part
	MinAdvertisementInterval uint32 `protobuf:"varint,5,opt,name=min_advertisement_interval,json=minAdvertisementInterval,proto3" json:"min_advertisement_interval,omitempty"`
	// Minimum advertisement interval, msecs part
	MinAdvertisementIntervalMsecs uint32 `protobuf:"varint,6,opt,name=min_advertisement_interval_msecs,json=minAdvertisementIntervalMsecs,proto3" json:"min_advertisement_interval_msecs,omitempty"`
	// Description
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// EBGP neighbors hop count
	EbgpHopCount uint32 `protobuf:"varint,8,opt,name=ebgp_hop_count,json=ebgpHopCount,proto3" json:"ebgp_hop_count,omitempty"`
	// BMP Servers activated
	BmpServers uint32 `protobuf:"varint,9,opt,name=bmp_servers,json=bmpServers,proto3" json:"bmp_servers,omitempty"`
	// If true, MPLS and NULL rewrite is disabled; if false, it is enabled
	IsEbgpMultihopBgpmplsForwardingDisabled bool `protobuf:"varint,10,opt,name=is_ebgp_multihop_bgpmpls_forwarding_disabled,json=isEbgpMultihopBgpmplsForwardingDisabled,proto3" json:"is_ebgp_multihop_bgpmpls_forwarding_disabled,omitempty"`
	// Neighbor keychain Name
	Keychain string `protobuf:"bytes,11,opt,name=keychain,proto3" json:"keychain,omitempty"`
	// First half of Local ASN
	LocalAsNumberXx uint32 `protobuf:"varint,12,opt,name=local_as_number_xx,json=localAsNumberXx,proto3" json:"local_as_number_xx,omitempty"`
	// Second half of Local ASN
	LocalAsNumberYy uint32 `protobuf:"varint,13,opt,name=local_as_number_yy,json=localAsNumberYy,proto3" json:"local_as_number_yy,omitempty"`
	// Local AS no-prepend option
	LocalAsNoPrepend bool `protobuf:"varint,14,opt,name=local_as_no_prepend,json=localAsNoPrepend,proto3" json:"local_as_no_prepend,omitempty"`
	// Neighbor password
	Password string `protobuf:"bytes,15,opt,name=password,proto3" json:"password,omitempty"`
	// Socket receive buffer size
	SocketBufferReceiveSize uint32 `protobuf:"varint,16,opt,name=socket_buffer_receive_size,json=socketBufferReceiveSize,proto3" json:"socket_buffer_receive_size,omitempty"`
	// BGP receive buffer size
	BgpBufferReceiveSize uint32 `protobuf:"varint,17,opt,name=bgp_buffer_receive_size,json=bgpBufferReceiveSize,proto3" json:"bgp_buffer_receive_size,omitempty"`
	// Socket send buffer size
	SocketBufferSendSize uint32 `protobuf:"varint,18,opt,name=socket_buffer_send_size,json=socketBufferSendSize,proto3" json:"socket_buffer_send_size,omitempty"`
	// BGP send buffer size
	BgpBufferSendSize uint32 `protobuf:"varint,19,opt,name=bgp_buffer_send_size,json=bgpBufferSendSize,proto3" json:"bgp_buffer_send_size,omitempty"`
	// Administrative shutdown
	AdminstrativeShutdown bool `protobuf:"varint,20,opt,name=adminstrative_shutdown,json=adminstrativeShutdown,proto3" json:"adminstrative_shutdown,omitempty"`
	// Keepalive interval
	KeepaliveInterval uint32 `protobuf:"varint,21,opt,name=keepalive_interval,json=keepaliveInterval,proto3" json:"keepalive_interval,omitempty"`
	// Holdtime
	HoldTimeValue uint32 `protobuf:"varint,22,opt,name=hold_time_value,json=holdTimeValue,proto3" json:"hold_time_value,omitempty"`
	// Min acceptable holdtimefrom neighbor
	MinAccHoldTimeValue uint32 `protobuf:"varint,23,opt,name=min_acc_hold_time_value,json=minAccHoldTimeValue,proto3" json:"min_acc_hold_time_value,omitempty"`
	// Local ipv4 or ipv6 address for neighbor connection
	LocalIpAddress *BgpAddrtype `protobuf:"bytes,24,opt,name=local_ip_address,json=localIpAddress,proto3" json:"local_ip_address,omitempty"`
	// Message Log Inbound buffer count
	MsgLogInBufCount uint32 `protobuf:"varint,25,opt,name=msg_log_in_buf_count,json=msgLogInBufCount,proto3" json:"msg_log_in_buf_count,omitempty"`
	// Message Log Outbound buffer count
	MsgLogOutBufCount uint32 `protobuf:"varint,26,opt,name=msg_log_out_buf_count,json=msgLogOutBufCount,proto3" json:"msg_log_out_buf_count,omitempty"`
	// Source of routing updates
	RouteUpdatesSource string `protobuf:"bytes,27,opt,name=route_updates_source,json=routeUpdatesSource,proto3" json:"route_updates_source,omitempty"`
	// Propagate the DMZ link bandwidth
	DmzLinkBandwidth uint32 `protobuf:"varint,28,opt,name=dmz_link_bandwidth,json=dmzLinkBandwidth,proto3" json:"dmz_link_bandwidth,omitempty"`
	// Receive Bandwidth of link to single-hop eBGP peer
	EbgpRecvDmz uint32 `protobuf:"varint,29,opt,name=ebgp_recv_dmz,json=ebgpRecvDmz,proto3" json:"ebgp_recv_dmz,omitempty"`
	// Send DMZ link bandwidthto ebgp peer
	EbgpSendDmzMode string `protobuf:"bytes,30,opt,name=ebgp_send_dmz_mode,json=ebgpSendDmzMode,proto3" json:"ebgp_send_dmz_mode,omitempty"`
	// Enable BGP TTL Security
	TtlSecurity uint32 `protobuf:"varint,31,opt,name=ttl_security,json=ttlSecurity,proto3" json:"ttl_security,omitempty"`
	// Suppress BGP 4byteas Cap
	Suppress4ByteAs uint32 `protobuf:"varint,32,opt,name=suppress4_byte_as,json=suppress4ByteAs,proto3" json:"suppress4_byte_as,omitempty"`
	// Capability negotiation is suppressed
	CapabilityNegotiationSuppressed uint32 `protobuf:"varint,33,opt,name=capability_negotiation_suppressed,json=capabilityNegotiationSuppressed,proto3" json:"capability_negotiation_suppressed,omitempty"`
	// TCP open mode to be used
	SessionOpenMode string `protobuf:"bytes,34,opt,name=session_open_mode,json=sessionOpenMode,proto3" json:"session_open_mode,omitempty"`
	// Fast failure detection using BFD
	Bfd uint32 `protobuf:"varint,35,opt,name=bfd,proto3" json:"bfd,omitempty"`
	// BFD Minimum Interval
	BfdMininterval uint32 `protobuf:"varint,36,opt,name=bfd_mininterval,json=bfdMininterval,proto3" json:"bfd_mininterval,omitempty"`
	// BFD Multiplier
	BfdMultiplier uint32 `protobuf:"varint,37,opt,name=bfd_multiplier,json=bfdMultiplier,proto3" json:"bfd_multiplier,omitempty"`
	// Precedence or DSCP type
	TosTypeInfo uint32 `protobuf:"varint,38,opt,name=tos_type_info,json=tosTypeInfo,proto3" json:"tos_type_info,omitempty"`
	// Precedence or DSCP value
	TosValueInfo uint32 `protobuf:"varint,39,opt,name=tos_value_info,json=tosValueInfo,proto3" json:"tos_value_info,omitempty"`
	// Support for NSR
	NsrDisabled uint32 `protobuf:"varint,40,opt,name=nsr_disabled,json=nsrDisabled,proto3" json:"nsr_disabled,omitempty"`
	// Support for graceful-restart
	GracefulRestartDisabled uint32 `protobuf:"varint,41,opt,name=graceful_restart_disabled,json=gracefulRestartDisabled,proto3" json:"graceful_restart_disabled,omitempty"`
	// Restart time (in seconds)
	NbrRestartTime uint32 `protobuf:"varint,42,opt,name=nbr_restart_time,json=nbrRestartTime,proto3" json:"nbr_restart_time,omitempty"`
	// Stale-path time(in seconds)
	NbrStalePathTime uint32 `protobuf:"varint,43,opt,name=nbr_stale_path_time,json=nbrStalePathTime,proto3" json:"nbr_stale_path_time,omitempty"`
	// Neighbor enforce first AS status
	NbrEnforceFirstAsStatus bool `protobuf:"varint,44,opt,name=nbr_enforce_first_as_status,json=nbrEnforceFirstAsStatus,proto3" json:"nbr_enforce_first_as_status,omitempty"`
	// Cluster ID Type
	NbrClusterIdTypeInfo uint32 `protobuf:"varint,45,opt,name=nbr_cluster_id_type_info,json=nbrClusterIdTypeInfo,proto3" json:"nbr_cluster_id_type_info,omitempty"`
	// Cluster ID value
	NbrClusterIdInfo uint32 `protobuf:"varint,46,opt,name=nbr_cluster_id_info,json=nbrClusterIdInfo,proto3" json:"nbr_cluster_id_info,omitempty"`
	// If true, don't do NHconnected check for nbr
	IgnoreConnectedCheck bool `protobuf:"varint,47,opt,name=ignore_connected_check,json=ignoreConnectedCheck,proto3" json:"ignore_connected_check,omitempty"`
	// If true, the VPN client isan iBGP CE peer
	InternalVpnClient bool `protobuf:"varint,48,opt,name=internal_vpn_client,json=internalVpnClient,proto3" json:"internal_vpn_client,omitempty"`
	// Indicates if addpath send capability is enabled or disabled
	AddpathSendCapability uint32 `protobuf:"varint,49,opt,name=addpath_send_capability,json=addpathSendCapability,proto3" json:"addpath_send_capability,omitempty"`
	// Indicates if avoid-reset behavior is enabled during update error-handling
	UpdateErrorHandlingNoReset uint32 `protobuf:"varint,50,opt,name=update_error_handling_no_reset,json=updateErrorHandlingNoReset,proto3" json:"update_error_handling_no_reset,omitempty"`
	// Indicates if addpath receive capability is enabled or disabled
	AddpathReceiveCapability uint32 `protobuf:"varint,51,opt,name=addpath_receive_capability,json=addpathReceiveCapability,proto3" json:"addpath_receive_capability,omitempty"`
	// Indicates egress peer engineering is enabled
	EgressPeerEngineering uint32 `protobuf:"varint,52,opt,name=egress_peer_engineering,json=egressPeerEngineering,proto3" json:"egress_peer_engineering,omitempty"`
	// Prefix validation disable
	PrefixValidationDisable uint32 `protobuf:"varint,53,opt,name=prefix_validation_disable,json=prefixValidationDisable,proto3" json:"prefix_validation_disable,omitempty"`
	// Bestpath Use Origin-AS Va
	BestpathUseOriginAsValidity uint32 `protobuf:"varint,54,opt,name=bestpath_use_origin_as_validity,json=bestpathUseOriginAsValidity,proto3" json:"bestpath_use_origin_as_validity,omitempty"`
	// Prefix vallidation allow invalid
	PrefixValidationAllowInvalid uint32 `protobuf:"varint,55,opt,name=prefix_validation_allow_invalid,json=prefixValidationAllowInvalid,proto3" json:"prefix_validation_allow_invalid,omitempty"`
	// Prefix validation signal ibgp
	PrefixValidationSignalIbgp uint32 `protobuf:"varint,56,opt,name=prefix_validation_signal_ibgp,json=prefixValidationSignalIbgp,proto3" json:"prefix_validation_signal_ibgp,omitempty"`
	// Indicates if neighbor filter configuration exists
	NeighborUpdateFilterExists bool `protobuf:"varint,57,opt,name=neighbor_update_filter_exists,json=neighborUpdateFilterExists,proto3" json:"neighbor_update_filter_exists,omitempty"`
	// Count of neighbor filter message buffers
	NeighborUpdateFilterMessageBufferCount uint32 `protobuf:"varint,58,opt,name=neighbor_update_filter_message_buffer_count,json=neighborUpdateFilterMessageBufferCount,proto3" json:"neighbor_update_filter_message_buffer_count,omitempty"`
	// Indicates if neighbor update filter message buffer is circular or not
	NeighborUpdateFilterMessageBufferIsNonCircular bool `protobuf:"varint,59,opt,name=neighbor_update_filter_message_buffer_is_non_circular,json=neighborUpdateFilterMessageBufferIsNonCircular,proto3" json:"neighbor_update_filter_message_buffer_is_non_circular,omitempty"`
	// Indicates if neighbor filter logging is disabled
	NeighborUpdateFilterLoggingDisable bool `protobuf:"varint,60,opt,name=neighbor_update_filter_logging_disable,json=neighborUpdateFilterLoggingDisable,proto3" json:"neighbor_update_filter_logging_disable,omitempty"`
	// Neighbor filter attribute-filter group name
	NeighborUpdateFilterAttributeFilterGroupName string `protobuf:"bytes,61,opt,name=neighbor_update_filter_attribute_filter_group_name,json=neighborUpdateFilterAttributeFilterGroupName,proto3" json:"neighbor_update_filter_attribute_filter_group_name,omitempty"`
	// re-advertise all routes to and from this neighbor with the GSHUT community during Shutdown or bring-up
	GracefulShutdownExists uint32 `protobuf:"varint,62,opt,name=graceful_shutdown_exists,json=gracefulShutdownExists,proto3" json:"graceful_shutdown_exists,omitempty"`
	// Local Preference to advertise routes with during Graceful Shutdown to IBGP. Default=No Touch
	GracefulShutdownLocPref uint32 `protobuf:"varint,63,opt,name=graceful_shutdown_loc_pref,json=gracefulShutdownLocPref,proto3" json:"graceful_shutdown_loc_pref,omitempty"`
	// Prepend the local AS this many times to the AS path of routes advertised during Graceful Shutdown
	GracefulShutdownAsPrepends uint32 `protobuf:"varint,64,opt,name=graceful_shutdown_as_prepends,json=gracefulShutdownAsPrepends,proto3" json:"graceful_shutdown_as_prepends,omitempty"`
	// Graceful Shutdown state is activated
	GracefulShutdownActivate uint32 `protobuf:"varint,65,opt,name=graceful_shutdown_activate,json=gracefulShutdownActivate,proto3" json:"graceful_shutdown_activate,omitempty"`
	// Remote AS number item info
	RemoteAsInfo *BgpConfigInfo_ `protobuf:"bytes,66,opt,name=remote_as_info,json=remoteAsInfo,proto3" json:"remote_as_info,omitempty"`
	// Configured speaker ID item info
	SpeakerIdInfo *BgpConfigInfo_ `protobuf:"bytes,67,opt,name=speaker_id_info,json=speakerIdInfo,proto3" json:"speaker_id_info,omitempty"`
	// Minimum advertisement interval item info
	MinAdvertisementInfo *BgpConfigInfo_ `protobuf:"bytes,68,opt,name=min_advertisement_info,json=minAdvertisementInfo,proto3" json:"min_advertisement_info,omitempty"`
	// Description item info
	DescriptionInfo *BgpConfigInfo_ `protobuf:"bytes,69,opt,name=description_info,json=descriptionInfo,proto3" json:"description_info,omitempty"`
	// EBGP neighbors hop count item info
	EbgpHopCountInfo *BgpConfigInfo_ `protobuf:"bytes,70,opt,name=ebgp_hop_count_info,json=ebgpHopCountInfo,proto3" json:"ebgp_hop_count_info,omitempty"`
	// TCP Maximum Segment Size item info
	TcpmssInfo *BgpConfigInfo_ `protobuf:"bytes,71,opt,name=tcpmss_info,json=tcpmssInfo,proto3" json:"tcpmss_info,omitempty"`
	// BMP Servers Configuredinfo
	BmpServersInfo *BgpConfigInfo_ `protobuf:"bytes,72,opt,name=bmp_servers_info,json=bmpServersInfo,proto3" json:"bmp_servers_info,omitempty"`
	// Neighbor Keychain item info
	KeychainInfo *BgpConfigInfo_ `protobuf:"bytes,73,opt,name=keychain_info,json=keychainInfo,proto3" json:"keychain_info,omitempty"`
	// Local AS number item info
	LocalAsInfo *BgpConfigInfo_ `protobuf:"bytes,74,opt,name=local_as_info,json=localAsInfo,proto3" json:"local_as_info,omitempty"`
	// Neighbor password item info
	PasswordInfo *BgpConfigInfo_ `protobuf:"bytes,75,opt,name=password_info,json=passwordInfo,proto3" json:"password_info,omitempty"`
	// Receive buffer sizes item info
	ReceiveBufferInfo *BgpConfigInfo_ `protobuf:"bytes,76,opt,name=receive_buffer_info,json=receiveBufferInfo,proto3" json:"receive_buffer_info,omitempty"`
	// Send buffer sizes item info
	SendBufferInfo *BgpConfigInfo_ `protobuf:"bytes,77,opt,name=send_buffer_info,json=sendBufferInfo,proto3" json:"send_buffer_info,omitempty"`
	// Shutdown item info
	ShutdownInfo *BgpConfigInfo_ `protobuf:"bytes,78,opt,name=shutdown_info,json=shutdownInfo,proto3" json:"shutdown_info,omitempty"`
	// Timers item info
	TimersInfo *BgpConfigInfo_ `protobuf:"bytes,79,opt,name=timers_info,json=timersInfo,proto3" json:"timers_info,omitempty"`
	// Local address item info
	LocalAddressInfo *BgpConfigInfo_ `protobuf:"bytes,80,opt,name=local_address_info,json=localAddressInfo,proto3" json:"local_address_info,omitempty"`
	// Message Log Inbound item info
	MsgLogInInfo *BgpConfigInfo_ `protobuf:"bytes,81,opt,name=msg_log_in_info,json=msgLogInInfo,proto3" json:"msg_log_in_info,omitempty"`
	// Message Log Outbound item info
	MsgLogOutInfo *BgpConfigInfo_ `protobuf:"bytes,82,opt,name=msg_log_out_info,json=msgLogOutInfo,proto3" json:"msg_log_out_info,omitempty"`
	// Update source item info
	UpdateSourceInfo *BgpConfigInfo_ `protobuf:"bytes,83,opt,name=update_source_info,json=updateSourceInfo,proto3" json:"update_source_info,omitempty"`
	// DMZ link bandwidth item
	DmzLinkBandwidthInfo *BgpConfigInfo_ `protobuf:"bytes,84,opt,name=dmz_link_bandwidth_info,json=dmzLinkBandwidthInfo,proto3" json:"dmz_link_bandwidth_info,omitempty"`
	// EBGP receive DMZ link bandwidth item info
	EbgpRecvDmzInfo *BgpConfigInfo_ `protobuf:"bytes,85,opt,name=ebgp_recv_dmz_info,json=ebgpRecvDmzInfo,proto3" json:"ebgp_recv_dmz_info,omitempty"`
	// EBGP send DMZ link bandwidth item info
	EbgpSendDmzInfo *BgpConfigInfo_ `protobuf:"bytes,86,opt,name=ebgp_send_dmz_info,json=ebgpSendDmzInfo,proto3" json:"ebgp_send_dmz_info,omitempty"`
	// BGP TTL Security item info
	TtlSecurityInfo *BgpConfigInfo_ `protobuf:"bytes,87,opt,name=ttl_security_info,json=ttlSecurityInfo,proto3" json:"ttl_security_info,omitempty"`
	// BGP suppress 4byte-as item info
	Suppress4BbyteAsInfo *BgpConfigInfo_ `protobuf:"bytes,88,opt,name=suppress4_bbyte_as_info,json=suppress4BbyteAsInfo,proto3" json:"suppress4_bbyte_as_info,omitempty"`
	// TCP conn open mode info
	SessionOpenModeInfo *BgpConfigInfo_ `protobuf:"bytes,89,opt,name=session_open_mode_info,json=sessionOpenModeInfo,proto3" json:"session_open_mode_info,omitempty"`
	// BFD item info
	BfdInfo *BgpConfigInfo_ `protobuf:"bytes,90,opt,name=bfd_info,json=bfdInfo,proto3" json:"bfd_info,omitempty"`
	// BFD Mininterval item info
	BfdMinintervalInfo *BgpConfigInfo_ `protobuf:"bytes,91,opt,name=bfd_mininterval_info,json=bfdMinintervalInfo,proto3" json:"bfd_mininterval_info,omitempty"`
	// BFD Multiplier item info
	BfdMultiplierInfo *BgpConfigInfo_ `protobuf:"bytes,92,opt,name=bfd_multiplier_info,json=bfdMultiplierInfo,proto3" json:"bfd_multiplier_info,omitempty"`
	// TOS item info
	TosInfo *BgpConfigInfo_ `protobuf:"bytes,93,opt,name=tos_info,json=tosInfo,proto3" json:"tos_info,omitempty"`
	// NSR item info
	NsrDisabledInfo *BgpConfigInfo_ `protobuf:"bytes,94,opt,name=nsr_disabled_info,json=nsrDisabledInfo,proto3" json:"nsr_disabled_info,omitempty"`
	// Graceful-restart item info
	GracefulRestartDisabledInfo *BgpConfigInfo_ `protobuf:"bytes,95,opt,name=graceful_restart_disabled_info,json=gracefulRestartDisabledInfo,proto3" json:"graceful_restart_disabled_info,omitempty"`
	// Restart time item info
	NbrRestartTimeInfo *BgpConfigInfo_ `protobuf:"bytes,96,opt,name=nbr_restart_time_info,json=nbrRestartTimeInfo,proto3" json:"nbr_restart_time_info,omitempty"`
	// Stale-path time item info
	NbrStalePathTimeInfo *BgpConfigInfo_ `protobuf:"bytes,97,opt,name=nbr_stale_path_time_info,json=nbrStalePathTimeInfo,proto3" json:"nbr_stale_path_time_info,omitempty"`
	// Neighbor enforce first AS info
	NbrEnforceFirstAsInfo *BgpConfigInfo_ `protobuf:"bytes,98,opt,name=nbr_enforce_first_as_info,json=nbrEnforceFirstAsInfo,proto3" json:"nbr_enforce_first_as_info,omitempty"`
	// Cluster ID item info
	ClusterIdInfo *BgpConfigInfo_ `protobuf:"bytes,99,opt,name=cluster_id_info,json=clusterIdInfo,proto3" json:"cluster_id_info,omitempty"`
	// Ignore Connected Info
	IgnoreConnectedInfo *BgpConfigInfo_ `protobuf:"bytes,100,opt,name=ignore_connected_info,json=ignoreConnectedInfo,proto3" json:"ignore_connected_info,omitempty"`
	// Internal VPN Client Info
	InternalVpnClientInfo *BgpConfigInfo_ `protobuf:"bytes,101,opt,name=internal_vpn_client_info,json=internalVpnClientInfo,proto3" json:"internal_vpn_client_info,omitempty"`
	// Addpath send capability info
	AddpathSendCapabilityInfo *BgpConfigInfo_ `protobuf:"bytes,102,opt,name=addpath_send_capability_info,json=addpathSendCapabilityInfo,proto3" json:"addpath_send_capability_info,omitempty"`
	// Addpath receive capability info
	AddpathReceiveCapabilityInfo *BgpConfigInfo_ `protobuf:"bytes,103,opt,name=addpath_receive_capability_info,json=addpathReceiveCapabilityInfo,proto3" json:"addpath_receive_capability_info,omitempty"`
	// Egress Peer Engineering info
	EgressPeerEngineeringInfo *BgpConfigInfo_ `protobuf:"bytes,104,opt,name=egress_peer_engineering_info,json=egressPeerEngineeringInfo,proto3" json:"egress_peer_engineering_info,omitempty"`
	// Error-handling avoid-reset config info
	UpdateErrorHandlingNoResetInfo *BgpConfigInfo_ `protobuf:"bytes,105,opt,name=update_error_handling_no_reset_info,json=updateErrorHandlingNoResetInfo,proto3" json:"update_error_handling_no_reset_info,omitempty"`
	// RPKI disable info
	PrefixValidationDisableInfo *BgpConfigInfo_ `protobuf:"bytes,106,opt,name=prefix_validation_disable_info,json=prefixValidationDisableInfo,proto3" json:"prefix_validation_disable_info,omitempty"`
	// RPKI use validity
	PrefixValidationUseValiditInfo *BgpConfigInfo_ `protobuf:"bytes,107,opt,name=prefix_validation_use_validit_info,json=prefixValidationUseValiditInfo,proto3" json:"prefix_validation_use_validit_info,omitempty"`
	// RPKI allow invalid info
	PrefixValidationAllowInvalidInfo *BgpConfigInfo_ `protobuf:"bytes,108,opt,name=prefix_validation_allow_invalid_info,json=prefixValidationAllowInvalidInfo,proto3" json:"prefix_validation_allow_invalid_info,omitempty"`
	// RPKI signal ibgp info
	PrefixValidationSignalIbgpInfo *BgpConfigInfo_ `protobuf:"bytes,109,opt,name=prefix_validation_signal_ibgp_info,json=prefixValidationSignalIbgpInfo,proto3" json:"prefix_validation_signal_ibgp_info,omitempty"`
	// Neighbor update filter configuration info
	NeighborUpdateFilterExistsInfo *BgpConfigInfo_ `protobuf:"bytes,110,opt,name=neighbor_update_filter_exists_info,json=neighborUpdateFilterExistsInfo,proto3" json:"neighbor_update_filter_exists_info,omitempty"`
	// Neighbor update filter message buffer count info
	NeighborUpdateFilterMessageBufferCountInfo *BgpConfigInfo_ `protobuf:"bytes,111,opt,name=neighbor_update_filter_message_buffer_count_info,json=neighborUpdateFilterMessageBufferCountInfo,proto3" json:"neighbor_update_filter_message_buffer_count_info,omitempty"`
	// Neighbor update filter syslog disable info
	NeighborUpdateFilterSyslogDisableInfo *BgpConfigInfo_ `protobuf:"bytes,112,opt,name=neighbor_update_filter_syslog_disable_info,json=neighborUpdateFilterSyslogDisableInfo,proto3" json:"neighbor_update_filter_syslog_disable_info,omitempty"`
	// Neighbor update filter attribute-filter group info
	NeighborUpdateFilterAttributeInfo *BgpConfigInfo_ `protobuf:"bytes,113,opt,name=neighbor_update_filter_attribute_info,json=neighborUpdateFilterAttributeInfo,proto3" json:"neighbor_update_filter_attribute_info,omitempty"`
	// GracefulShutdown info
	GracefulShutdownInfo *BgpConfigInfo_ `protobuf:"bytes,114,opt,name=graceful_shutdown_info,json=gracefulShutdownInfo,proto3" json:"graceful_shutdown_info,omitempty"`
	// GracefulShutdownLocPref info
	GracefulShutdownLocPrefInfo *BgpConfigInfo_ `protobuf:"bytes,115,opt,name=graceful_shutdown_loc_pref_info,json=gracefulShutdownLocPrefInfo,proto3" json:"graceful_shutdown_loc_pref_info,omitempty"`
	// GracefulShutdownASPrepends info
	GracefulShutdownAsPrependsInfo *BgpConfigInfo_ `protobuf:"bytes,116,opt,name=graceful_shutdown_as_prepends_info,json=gracefulShutdownAsPrependsInfo,proto3" json:"graceful_shutdown_as_prepends_info,omitempty"`
	// GracefulShutdownAcivate info
	GracefulShutdownActivateInfo *BgpConfigInfo_ `protobuf:"bytes,117,opt,name=graceful_shutdown_activate_info,json=gracefulShutdownActivateInfo,proto3" json:"graceful_shutdown_activate_info,omitempty"`
	// Capability negotiation suppressed info
	CapabilityNegotiationSuppressedInfo *BgpConfigInfo_ `protobuf:"bytes,118,opt,name=capability_negotiation_suppressed_info,json=capabilityNegotiationSuppressedInfo,proto3" json:"capability_negotiation_suppressed_info,omitempty"`
	// Local AS Replace-AS option
	LocalAsReplaceAs bool `protobuf:"varint,119,opt,name=local_as_replace_as,json=localAsReplaceAs,proto3" json:"local_as_replace_as,omitempty"`
	// Local AS Dual-AS option
	LocalAsDualAs bool `protobuf:"varint,120,opt,name=local_as_dual_as,json=localAsDualAs,proto3" json:"local_as_dual_as,omitempty"`
}

func (x *BgpAfIndep_) Reset() {
	*x = BgpAfIndep_{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpAfIndep_) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpAfIndep_) ProtoMessage() {}

func (x *BgpAfIndep_) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpAfIndep_.ProtoReflect.Descriptor instead.
func (*BgpAfIndep_) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{19}
}

func (x *BgpAfIndep_) GetRemoteAsNumberXx() uint32 {
	if x != nil {
		return x.RemoteAsNumberXx
	}
	return 0
}

func (x *BgpAfIndep_) GetRemoteAsNumberYy() uint32 {
	if x != nil {
		return x.RemoteAsNumberYy
	}
	return 0
}

func (x *BgpAfIndep_) GetConfiguredSpeakerId() uint32 {
	if x != nil {
		return x.ConfiguredSpeakerId
	}
	return 0
}

func (x *BgpAfIndep_) GetTcpMss() uint32 {
	if x != nil {
		return x.TcpMss
	}
	return 0
}

func (x *BgpAfIndep_) GetMinAdvertisementInterval() uint32 {
	if x != nil {
		return x.MinAdvertisementInterval
	}
	return 0
}

func (x *BgpAfIndep_) GetMinAdvertisementIntervalMsecs() uint32 {
	if x != nil {
		return x.MinAdvertisementIntervalMsecs
	}
	return 0
}

func (x *BgpAfIndep_) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BgpAfIndep_) GetEbgpHopCount() uint32 {
	if x != nil {
		return x.EbgpHopCount
	}
	return 0
}

func (x *BgpAfIndep_) GetBmpServers() uint32 {
	if x != nil {
		return x.BmpServers
	}
	return 0
}

func (x *BgpAfIndep_) GetIsEbgpMultihopBgpmplsForwardingDisabled() bool {
	if x != nil {
		return x.IsEbgpMultihopBgpmplsForwardingDisabled
	}
	return false
}

func (x *BgpAfIndep_) GetKeychain() string {
	if x != nil {
		return x.Keychain
	}
	return ""
}

func (x *BgpAfIndep_) GetLocalAsNumberXx() uint32 {
	if x != nil {
		return x.LocalAsNumberXx
	}
	return 0
}

func (x *BgpAfIndep_) GetLocalAsNumberYy() uint32 {
	if x != nil {
		return x.LocalAsNumberYy
	}
	return 0
}

func (x *BgpAfIndep_) GetLocalAsNoPrepend() bool {
	if x != nil {
		return x.LocalAsNoPrepend
	}
	return false
}

func (x *BgpAfIndep_) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *BgpAfIndep_) GetSocketBufferReceiveSize() uint32 {
	if x != nil {
		return x.SocketBufferReceiveSize
	}
	return 0
}

func (x *BgpAfIndep_) GetBgpBufferReceiveSize() uint32 {
	if x != nil {
		return x.BgpBufferReceiveSize
	}
	return 0
}

func (x *BgpAfIndep_) GetSocketBufferSendSize() uint32 {
	if x != nil {
		return x.SocketBufferSendSize
	}
	return 0
}

func (x *BgpAfIndep_) GetBgpBufferSendSize() uint32 {
	if x != nil {
		return x.BgpBufferSendSize
	}
	return 0
}

func (x *BgpAfIndep_) GetAdminstrativeShutdown() bool {
	if x != nil {
		return x.AdminstrativeShutdown
	}
	return false
}

func (x *BgpAfIndep_) GetKeepaliveInterval() uint32 {
	if x != nil {
		return x.KeepaliveInterval
	}
	return 0
}

func (x *BgpAfIndep_) GetHoldTimeValue() uint32 {
	if x != nil {
		return x.HoldTimeValue
	}
	return 0
}

func (x *BgpAfIndep_) GetMinAccHoldTimeValue() uint32 {
	if x != nil {
		return x.MinAccHoldTimeValue
	}
	return 0
}

func (x *BgpAfIndep_) GetLocalIpAddress() *BgpAddrtype {
	if x != nil {
		return x.LocalIpAddress
	}
	return nil
}

func (x *BgpAfIndep_) GetMsgLogInBufCount() uint32 {
	if x != nil {
		return x.MsgLogInBufCount
	}
	return 0
}

func (x *BgpAfIndep_) GetMsgLogOutBufCount() uint32 {
	if x != nil {
		return x.MsgLogOutBufCount
	}
	return 0
}

func (x *BgpAfIndep_) GetRouteUpdatesSource() string {
	if x != nil {
		return x.RouteUpdatesSource
	}
	return ""
}

func (x *BgpAfIndep_) GetDmzLinkBandwidth() uint32 {
	if x != nil {
		return x.DmzLinkBandwidth
	}
	return 0
}

func (x *BgpAfIndep_) GetEbgpRecvDmz() uint32 {
	if x != nil {
		return x.EbgpRecvDmz
	}
	return 0
}

func (x *BgpAfIndep_) GetEbgpSendDmzMode() string {
	if x != nil {
		return x.EbgpSendDmzMode
	}
	return ""
}

func (x *BgpAfIndep_) GetTtlSecurity() uint32 {
	if x != nil {
		return x.TtlSecurity
	}
	return 0
}

func (x *BgpAfIndep_) GetSuppress4ByteAs() uint32 {
	if x != nil {
		return x.Suppress4ByteAs
	}
	return 0
}

func (x *BgpAfIndep_) GetCapabilityNegotiationSuppressed() uint32 {
	if x != nil {
		return x.CapabilityNegotiationSuppressed
	}
	return 0
}

func (x *BgpAfIndep_) GetSessionOpenMode() string {
	if x != nil {
		return x.SessionOpenMode
	}
	return ""
}

func (x *BgpAfIndep_) GetBfd() uint32 {
	if x != nil {
		return x.Bfd
	}
	return 0
}

func (x *BgpAfIndep_) GetBfdMininterval() uint32 {
	if x != nil {
		return x.BfdMininterval
	}
	return 0
}

func (x *BgpAfIndep_) GetBfdMultiplier() uint32 {
	if x != nil {
		return x.BfdMultiplier
	}
	return 0
}

func (x *BgpAfIndep_) GetTosTypeInfo() uint32 {
	if x != nil {
		return x.TosTypeInfo
	}
	return 0
}

func (x *BgpAfIndep_) GetTosValueInfo() uint32 {
	if x != nil {
		return x.TosValueInfo
	}
	return 0
}

func (x *BgpAfIndep_) GetNsrDisabled() uint32 {
	if x != nil {
		return x.NsrDisabled
	}
	return 0
}

func (x *BgpAfIndep_) GetGracefulRestartDisabled() uint32 {
	if x != nil {
		return x.GracefulRestartDisabled
	}
	return 0
}

func (x *BgpAfIndep_) GetNbrRestartTime() uint32 {
	if x != nil {
		return x.NbrRestartTime
	}
	return 0
}

func (x *BgpAfIndep_) GetNbrStalePathTime() uint32 {
	if x != nil {
		return x.NbrStalePathTime
	}
	return 0
}

func (x *BgpAfIndep_) GetNbrEnforceFirstAsStatus() bool {
	if x != nil {
		return x.NbrEnforceFirstAsStatus
	}
	return false
}

func (x *BgpAfIndep_) GetNbrClusterIdTypeInfo() uint32 {
	if x != nil {
		return x.NbrClusterIdTypeInfo
	}
	return 0
}

func (x *BgpAfIndep_) GetNbrClusterIdInfo() uint32 {
	if x != nil {
		return x.NbrClusterIdInfo
	}
	return 0
}

func (x *BgpAfIndep_) GetIgnoreConnectedCheck() bool {
	if x != nil {
		return x.IgnoreConnectedCheck
	}
	return false
}

func (x *BgpAfIndep_) GetInternalVpnClient() bool {
	if x != nil {
		return x.InternalVpnClient
	}
	return false
}

func (x *BgpAfIndep_) GetAddpathSendCapability() uint32 {
	if x != nil {
		return x.AddpathSendCapability
	}
	return 0
}

func (x *BgpAfIndep_) GetUpdateErrorHandlingNoReset() uint32 {
	if x != nil {
		return x.UpdateErrorHandlingNoReset
	}
	return 0
}

func (x *BgpAfIndep_) GetAddpathReceiveCapability() uint32 {
	if x != nil {
		return x.AddpathReceiveCapability
	}
	return 0
}

func (x *BgpAfIndep_) GetEgressPeerEngineering() uint32 {
	if x != nil {
		return x.EgressPeerEngineering
	}
	return 0
}

func (x *BgpAfIndep_) GetPrefixValidationDisable() uint32 {
	if x != nil {
		return x.PrefixValidationDisable
	}
	return 0
}

func (x *BgpAfIndep_) GetBestpathUseOriginAsValidity() uint32 {
	if x != nil {
		return x.BestpathUseOriginAsValidity
	}
	return 0
}

func (x *BgpAfIndep_) GetPrefixValidationAllowInvalid() uint32 {
	if x != nil {
		return x.PrefixValidationAllowInvalid
	}
	return 0
}

func (x *BgpAfIndep_) GetPrefixValidationSignalIbgp() uint32 {
	if x != nil {
		return x.PrefixValidationSignalIbgp
	}
	return 0
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterExists() bool {
	if x != nil {
		return x.NeighborUpdateFilterExists
	}
	return false
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterMessageBufferCount() uint32 {
	if x != nil {
		return x.NeighborUpdateFilterMessageBufferCount
	}
	return 0
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterMessageBufferIsNonCircular() bool {
	if x != nil {
		return x.NeighborUpdateFilterMessageBufferIsNonCircular
	}
	return false
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterLoggingDisable() bool {
	if x != nil {
		return x.NeighborUpdateFilterLoggingDisable
	}
	return false
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterAttributeFilterGroupName() string {
	if x != nil {
		return x.NeighborUpdateFilterAttributeFilterGroupName
	}
	return ""
}

func (x *BgpAfIndep_) GetGracefulShutdownExists() uint32 {
	if x != nil {
		return x.GracefulShutdownExists
	}
	return 0
}

func (x *BgpAfIndep_) GetGracefulShutdownLocPref() uint32 {
	if x != nil {
		return x.GracefulShutdownLocPref
	}
	return 0
}

func (x *BgpAfIndep_) GetGracefulShutdownAsPrepends() uint32 {
	if x != nil {
		return x.GracefulShutdownAsPrepends
	}
	return 0
}

func (x *BgpAfIndep_) GetGracefulShutdownActivate() uint32 {
	if x != nil {
		return x.GracefulShutdownActivate
	}
	return 0
}

func (x *BgpAfIndep_) GetRemoteAsInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.RemoteAsInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetSpeakerIdInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SpeakerIdInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetMinAdvertisementInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.MinAdvertisementInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetDescriptionInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.DescriptionInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetEbgpHopCountInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.EbgpHopCountInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetTcpmssInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.TcpmssInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetBmpServersInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.BmpServersInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetKeychainInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.KeychainInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetLocalAsInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.LocalAsInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetPasswordInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.PasswordInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetReceiveBufferInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.ReceiveBufferInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetSendBufferInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SendBufferInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetShutdownInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.ShutdownInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetTimersInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.TimersInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetLocalAddressInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.LocalAddressInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetMsgLogInInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.MsgLogInInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetMsgLogOutInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.MsgLogOutInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetUpdateSourceInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.UpdateSourceInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetDmzLinkBandwidthInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.DmzLinkBandwidthInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetEbgpRecvDmzInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.EbgpRecvDmzInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetEbgpSendDmzInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.EbgpSendDmzInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetTtlSecurityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.TtlSecurityInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetSuppress4BbyteAsInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.Suppress4BbyteAsInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetSessionOpenModeInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.SessionOpenModeInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetBfdInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.BfdInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetBfdMinintervalInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.BfdMinintervalInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetBfdMultiplierInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.BfdMultiplierInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetTosInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.TosInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNsrDisabledInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NsrDisabledInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetGracefulRestartDisabledInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.GracefulRestartDisabledInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNbrRestartTimeInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NbrRestartTimeInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNbrStalePathTimeInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NbrStalePathTimeInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNbrEnforceFirstAsInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NbrEnforceFirstAsInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetClusterIdInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.ClusterIdInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetIgnoreConnectedInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.IgnoreConnectedInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetInternalVpnClientInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.InternalVpnClientInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetAddpathSendCapabilityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AddpathSendCapabilityInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetAddpathReceiveCapabilityInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.AddpathReceiveCapabilityInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetEgressPeerEngineeringInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.EgressPeerEngineeringInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetUpdateErrorHandlingNoResetInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.UpdateErrorHandlingNoResetInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetPrefixValidationDisableInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.PrefixValidationDisableInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetPrefixValidationUseValiditInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.PrefixValidationUseValiditInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetPrefixValidationAllowInvalidInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.PrefixValidationAllowInvalidInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetPrefixValidationSignalIbgpInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.PrefixValidationSignalIbgpInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterExistsInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NeighborUpdateFilterExistsInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterMessageBufferCountInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NeighborUpdateFilterMessageBufferCountInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterSyslogDisableInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NeighborUpdateFilterSyslogDisableInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetNeighborUpdateFilterAttributeInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.NeighborUpdateFilterAttributeInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetGracefulShutdownInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.GracefulShutdownInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetGracefulShutdownLocPrefInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.GracefulShutdownLocPrefInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetGracefulShutdownAsPrependsInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.GracefulShutdownAsPrependsInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetGracefulShutdownActivateInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.GracefulShutdownActivateInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetCapabilityNegotiationSuppressedInfo() *BgpConfigInfo_ {
	if x != nil {
		return x.CapabilityNegotiationSuppressedInfo
	}
	return nil
}

func (x *BgpAfIndep_) GetLocalAsReplaceAs() bool {
	if x != nil {
		return x.LocalAsReplaceAs
	}
	return false
}

func (x *BgpAfIndep_) GetLocalAsDualAs() bool {
	if x != nil {
		return x.LocalAsDualAs
	}
	return false
}

type BgpAfP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *BgpAfDep_ `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BgpAfP) Reset() {
	*x = BgpAfP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BgpAfP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpAfP) ProtoMessage() {}

func (x *BgpAfP) ProtoReflect() protoreflect.Message {
	mi := &file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpAfP.ProtoReflect.Descriptor instead.
func (*BgpAfP) Descriptor() ([]byte, []int) {
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP(), []int{20}
}

func (x *BgpAfP) GetValue() *BgpAfDep_ {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto protoreflect.FileDescriptor

var file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDesc = []byte{
	0x0a, 0x9d, 0x01, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2f, 0x62, 0x67,
	0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x81, 0x01, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc9, 0x01, 0x0a, 0x1a, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x67, 0x5f, 0x4b,
	0x45, 0x59, 0x53, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x72, 0x66, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x72, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xe6, 0x05, 0x0a, 0x15, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x67, 0x12, 0xbb, 0x01, 0x0a, 0x10, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x8f, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69,
	0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0xc5, 0x01, 0x0a, 0x15, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x90, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x61, 0x66, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x70, 0x5f, 0x52, 0x13, 0x61, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xbc, 0x01, 0x0a, 0x13, 0x61,
	0x66, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x37, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x8b, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63,
	0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67,
	0x70, 0x5f, 0x61, 0x66, 0x5f, 0x70, 0x52, 0x11, 0x61, 0x66, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x2d, 0x0a, 0x15, 0x49, 0x50, 0x56,
	0x34, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x49, 0x50, 0x56, 0x34,
	0x4d, 0x44, 0x54, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x52, 0x54, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x49, 0x50, 0x56, 0x36, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x10, 0x62, 0x67, 0x70, 0x5f, 0x6c, 0x32, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x5f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x32, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6c, 0x32, 0x76, 0x70, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x14, 0x4c, 0x32, 0x56, 0x50, 0x4e,
	0x45, 0x56, 0x50, 0x4e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x15, 0x62, 0x67, 0x70, 0x5f, 0x6c, 0x32, 0x76,
	0x70, 0x6e, 0x5f, 0x6d, 0x73, 0x70, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x32, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6c, 0x32, 0x76, 0x70, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x2b, 0x0a, 0x13, 0x49, 0x50, 0x56, 0x36, 0x4d, 0x56, 0x50, 0x4e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2b, 0x0a, 0x13, 0x49, 0x50, 0x56, 0x34, 0x4d, 0x56, 0x50, 0x4e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a,
	0x10, 0x4c, 0x53, 0x5f, 0x4c, 0x53, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x49, 0x50, 0x76, 0x34, 0x46,
	0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x49, 0x50, 0x76, 0x36,
	0x46, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa1, 0x1e, 0x0a, 0x0c, 0x62, 0x67,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x66,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x66, 0x69, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x70, 0x76,
	0x34, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x70, 0x76, 0x34, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xc9, 0x01, 0x0a, 0x13,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x98, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x56, 0x34, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x69, 0x70, 0x76, 0x34, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xc0, 0x01, 0x0a, 0x10, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x6d, 0x64, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x95, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x56, 0x34, 0x4d, 0x44, 0x54, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x69, 0x70, 0x76, 0x34,
	0x4d, 0x64, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x70, 0x76, 0x34, 0x56, 0x70, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x76, 0x70, 0x6e,
	0x61, 0x5f, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x70, 0x76, 0x34, 0x56, 0x70, 0x6e, 0x61, 0x4d, 0x63, 0x61,
	0x73, 0x74, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xb6, 0x01, 0x0a, 0x0c, 0x69, 0x70, 0x76,
	0x36, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x92, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x56, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0xc1, 0x01, 0x0a, 0x12, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x6d, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x92,
	0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69,
	0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x56, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x10, 0x69, 0x70, 0x76, 0x36, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xc1, 0x01, 0x0a, 0x12, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x92, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x56, 0x36, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x69, 0x70, 0x76, 0x36, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xbd, 0x01, 0x0a, 0x10, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x92, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x56, 0x36, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x69, 0x70, 0x76, 0x36, 0x56,
	0x70, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xc8, 0x01, 0x0a, 0x16, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x76, 0x70, 0x6e, 0x5f, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x92, 0x01, 0x2e, 0x63, 0x69,
	0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x56, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x13, 0x69, 0x70, 0x76, 0x36, 0x56, 0x70, 0x6e, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x6c, 0x32, 0x5f, 0x76, 0x70, 0x6e, 0x76,
	0x70, 0x6c, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x6c, 0x32, 0x76, 0x70, 0x6e,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x52, 0x10, 0x6c, 0x32, 0x56, 0x70, 0x6e, 0x76, 0x70,
	0x6c, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xcf, 0x01, 0x0a, 0x15, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9a, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x54, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xc3, 0x01, 0x0a, 0x11,
	0x69, 0x70, 0x76, 0x36, 0x5f, 0x6d, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x96, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x56,
	0x36, 0x4d, 0x56, 0x50, 0x4e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x69, 0x70, 0x76, 0x36, 0x4d, 0x76, 0x70, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0xc3, 0x01, 0x0a, 0x11, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x6d, 0x76, 0x70, 0x6e, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x96, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x56, 0x34, 0x4d, 0x56, 0x50, 0x4e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x70, 0x76, 0x34, 0x4d, 0x76, 0x70, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x13, 0x6c, 0x32, 0x5f, 0x76,
	0x70, 0x6e, 0x5f, 0x65, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x97, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69,
	0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x32, 0x56, 0x50, 0x4e,
	0x45, 0x56, 0x50, 0x4e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x10, 0x6c, 0x32, 0x56, 0x70, 0x6e, 0x45, 0x76, 0x70, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0xb8, 0x01, 0x0a, 0x0d, 0x6c, 0x73, 0x5f, 0x6c, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x53, 0x5f, 0x4c, 0x53, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x6c, 0x73, 0x4c, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xc8, 0x01, 0x0a,
	0x13, 0x6c, 0x32, 0x5f, 0x76, 0x70, 0x6e, 0x5f, 0x6d, 0x73, 0x70, 0x77, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x98, 0x01, 0x2e, 0x63, 0x69,
	0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x62, 0x67, 0x70, 0x5f, 0x6c, 0x32, 0x76, 0x70, 0x6e, 0x5f, 0x6d, 0x73, 0x70, 0x77, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x5f, 0x74, 0x52, 0x10, 0x6c, 0x32, 0x56, 0x70, 0x6e, 0x4d, 0x73, 0x70, 0x77,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xcf, 0x01, 0x0a, 0x15, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9a, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x76,
	0x34, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x69, 0x70, 0x76, 0x34, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x70,
	0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xcf, 0x01, 0x0a, 0x15, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9a, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x76, 0x36, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x69, 0x70, 0x76, 0x36, 0x46, 0x6c, 0x6f, 0x77,
	0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xd6, 0x01, 0x0a, 0x19,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x76, 0x70, 0x6e, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x9a, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x76, 0x34, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x69, 0x70,
	0x76, 0x34, 0x56, 0x70, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0xd6, 0x01, 0x0a, 0x19, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x76, 0x70,
	0x6e, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9a, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63,
	0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x76, 0x36, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x69, 0x70, 0x76, 0x36, 0x56, 0x70, 0x6e, 0x46, 0x6c,
	0x6f, 0x77, 0x73, 0x70, 0x65, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xdb, 0x01,
	0x0a, 0x11, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x64, 0x5f, 0x12, 0xc5, 0x01, 0x0a, 0x11, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x5f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x99, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x5f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x62, 0x67, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x64, 0x22, 0xe0, 0x02, 0x0a, 0x16,
	0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x64,
	0x5f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0xbb, 0x01, 0x0a, 0x10, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x8f, 0x01, 0x2e,
	0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0f,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x85,
	0x02, 0x0a, 0x10, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x64, 0x12, 0xc2, 0x01, 0x0a, 0x11, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x94, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x64, 0x5f, 0x52, 0x10, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x8a, 0x5c, 0x0a, 0x0b, 0x62, 0x67, 0x70, 0x5f, 0x61,
	0x66, 0x5f, 0x64, 0x65, 0x70, 0x5f, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x5f, 0x6f, 0x72,
	0x66, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x66, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x21, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1d, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x43,
	0x0a, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x57, 0x61, 0x72, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x34, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x57,
	0x61, 0x72, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0xba,
	0x01, 0x0a, 0x10, 0x6f, 0x72, 0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x8f, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6f, 0x72, 0x72,
	0x52, 0x6f, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x21, 0x69,
	0x73, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x69, 0x73, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x12, 0x38, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x68, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x48,
	0x6f, 0x70, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x31,
	0x0a, 0x15, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x75, 0x6e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69,
	0x73, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x55, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x65,
	0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26,
	0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x75, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6f, 0x72, 0x66, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x4f, 0x72, 0x66, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x15,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x73, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x73, 0x4f, 0x75, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x73, 0x70, 0x61, 0x74, 0x68,
	0x5f, 0x6f, 0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69,
	0x72, 0x65, 0x41, 0x73, 0x70, 0x61, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x73,
	0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x73, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x6e, 0x74, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x73, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x41, 0x73, 0x70,
	0x61, 0x74, 0x68, 0x49, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x19, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x5f, 0x70, 0x65, 0x5f, 0x72, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x50, 0x65, 0x52, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x66, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x41, 0x66, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x73, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x27, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x63,
	0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66,
	0x75, 0x6c, 0x53, 0x68, 0x75, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x21, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73, 0x6f, 0x66, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73,
	0x6f, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x55, 0x73, 0x65, 0x53, 0x6f, 0x66, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x69, 0x74, 0x65, 0x4f, 0x66, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x73, 0x12, 0x5f,
	0x0a, 0x2e, 0x61, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x27, 0x61, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69,
	0x76, 0x65, 0x64, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x63, 0x0a, 0x30, 0x61, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x29, 0x61, 0x66, 0x4c, 0x6f, 0x6e,
	0x67, 0x4c, 0x69, 0x76, 0x65, 0x64, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x12, 0x51, 0x0a, 0x26, 0x61, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f,
	0x6c, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x21, 0x61, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x76, 0x65,
	0x64, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x61, 0x73,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x41, 0x73, 0x4f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61, 0x69, 0x67, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x69, 0x67, 0x70, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x61, 0x69, 0x67,
	0x70, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a,
	0x69, 0x73, 0x41, 0x69, 0x67, 0x70, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x19, 0x69, 0x73,
	0x5f, 0x61, 0x69, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x69,
	0x73, 0x41, 0x69, 0x67, 0x70, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x21, 0x69, 0x73, 0x5f, 0x61, 0x69, 0x67, 0x70, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1d, 0x69, 0x73, 0x41, 0x69, 0x67, 0x70, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x61, 0x69, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x61, 0x69, 0x67, 0x70, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x50, 0x6f, 0x69, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x61, 0x69, 0x67, 0x70,
	0x5f, 0x6d, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x41, 0x69, 0x67, 0x70, 0x4d, 0x65, 0x64, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6f,
	0x77, 0x6e, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4f, 0x77, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x66, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x69, 0x73, 0x46, 0x73, 0x70, 0x65, 0x63, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x75, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f,
	0x6d, 0x70, 0x61, 0x74, 0x68, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x4e,
	0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x55, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4d,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x63, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x76, 0x34,
	0x18, 0x2e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x56, 0x34, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65,
	0x5f, 0x76, 0x36, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x56, 0x36, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x65, 0x5f, 0x6c, 0x32, 0x5f, 0x76, 0x70, 0x6e, 0x65, 0x76, 0x70, 0x6e, 0x18, 0x30,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c,
	0x32, 0x56, 0x70, 0x6e, 0x65, 0x76, 0x70, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x31, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x20, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x34, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1b, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x65, 0x66, 0x56, 0x72, 0x66,
	0x49, 0x6d, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x34, 0x12, 0x45, 0x0a, 0x20,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x76, 0x72,
	0x66, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x36,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x44, 0x65, 0x66, 0x56, 0x72, 0x66, 0x49, 0x6d, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x36, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x35, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x69, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x69, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x72, 0x65, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x1c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72,
	0x65, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x69, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x18, 0x38, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x74, 0x69,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x1d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x65,
	0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0xc4, 0x01, 0x0a, 0x13, 0x6f, 0x72,
	0x66, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x11, 0x6f,
	0x72, 0x66, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0xca, 0x01, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc0, 0x01,
	0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x0f, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0xaf, 0x01, 0x0a, 0x08, 0x6f, 0x72, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73,
	0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x07, 0x6f, 0x72, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xc1, 0x01, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f,
	0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x53, 0x65,
	0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xcb, 0x01, 0x0a, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x68, 0x6f, 0x70, 0x5f, 0x75, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63,
	0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67,
	0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x14,
	0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x55, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc5, 0x01, 0x0a, 0x14, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x40, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73,
	0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc7, 0x01, 0x0a,
	0x15, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e,
	0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x12, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f,
	0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x42, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73,
	0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x10, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc9, 0x01, 0x0a, 0x16,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e,
	0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xce, 0x01, 0x0a, 0x19, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x15, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x41, 0x73, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc6, 0x01, 0x0a, 0x14, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x12, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xbf, 0x01, 0x0a, 0x11, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x65, 0x5f,
	0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x65, 0x52, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0xbc, 0x01, 0x0a, 0x0f, 0x61, 0x66, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x0d, 0x61, 0x66, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xc4, 0x01, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xe6, 0x01, 0x0a, 0x25, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x21, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xd5, 0x01, 0x0a, 0x1c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x19, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x73,
	0x6f, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x10, 0x73,
	0x6f, 0x66, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xb0, 0x01, 0x0a, 0x09, 0x73, 0x6f, 0x5f, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73,
	0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x07, 0x73, 0x6f, 0x4f, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xb5, 0x01, 0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63,
	0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67,
	0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0a,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xbc, 0x01, 0x0a, 0x0f, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x61, 0x73, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xf1, 0x01, 0x0a, 0x2c, 0x61, 0x66,
	0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x63,
	0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x25, 0x61, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69,
	0x76, 0x65, 0x64, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xec, 0x01,
	0x0a, 0x29, 0x61, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x23, 0x61, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x4c,
	0x69, 0x76, 0x65, 0x64, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xbe, 0x01, 0x0a,
	0x10, 0x61, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0e, 0x61,
	0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xb1, 0x01,
	0x0a, 0x09, 0x61, 0x69, 0x67, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x52, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x08, 0x61, 0x69, 0x67, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xcd, 0x01, 0x0a, 0x18, 0x61, 0x69, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x53,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x15, 0x61, 0x69, 0x67, 0x70,
	0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xaf, 0x01, 0x0a, 0x08, 0x61, 0x69, 0x67, 0x70, 0x5f, 0x6d, 0x65, 0x64, 0x18, 0x54,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x07, 0x61, 0x69, 0x67, 0x70,
	0x4d, 0x65, 0x64, 0x12, 0xbc, 0x01, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6f,
	0x77, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x77, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xbb, 0x01, 0x0a, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x74, 0x68,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0xbe, 0x01, 0x0a, 0x10, 0x66, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x0e, 0x66, 0x73, 0x70, 0x65, 0x63, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xd6, 0x01, 0x0a, 0x1d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x75,
	0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6d, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x19, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x55, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x4d, 0x70, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xca, 0x01, 0x0a, 0x16, 0x70,
	0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc5, 0x01, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f,
	0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x11, 0x73, 0x65,
	0x6e, 0x64, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xc7, 0x01, 0x0a, 0x15, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x76, 0x34,
	0x5f, 0x61, 0x66, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x12, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65,
	0x56, 0x34, 0x41, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc7, 0x01, 0x0a, 0x15, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x76, 0x36, 0x5f, 0x61, 0x66, 0x69, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x12, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x56, 0x36, 0x41, 0x66, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0xd6, 0x01, 0x0a, 0x1d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x5f, 0x6c, 0x32, 0x5f, 0x76, 0x70, 0x6e, 0x65, 0x76, 0x70, 0x6e, 0x5f, 0x61, 0x66, 0x69,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x19, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c, 0x32, 0x56, 0x70,
	0x6e, 0x65, 0x76, 0x70, 0x6e, 0x41, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc2, 0x01, 0x0a,
	0x12, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x10, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x69, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xeb, 0x01, 0x0a, 0x29, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f,
	0x64, 0x65, 0x66, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x61, 0x66, 0x69, 0x5f, 0x76, 0x34, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69,
	0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x22, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x44, 0x65, 0x66, 0x56, 0x72, 0x66, 0x49, 0x6d, 0x70, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x66, 0x69, 0x56, 0x34, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xeb, 0x01, 0x0a, 0x29, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x61, 0x66, 0x69, 0x5f, 0x76, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x60, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73,
	0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x22, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x44, 0x65, 0x66, 0x56, 0x72, 0x66, 0x49, 0x6d, 0x70, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x66, 0x69, 0x56, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xd1, 0x01,
	0x0a, 0x1a, 0x61, 0x66, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x61, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x17, 0x61, 0x66, 0x45, 0x6e, 0x63, 0x61,
	0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xbc, 0x01, 0x0a, 0x0f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x69,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0xe0, 0x01, 0x0a, 0x22, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x1e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xa3, 0x72, 0x0a, 0x0d, 0x62, 0x67, 0x70, 0x5f, 0x61, 0x66, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x70, 0x5f, 0x12, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x78, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x58, 0x78, 0x12, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61,
	0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x79, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x59, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x64, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x53, 0x70,
	0x65, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x63, 0x70, 0x5f, 0x6d,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x63, 0x70, 0x4d, 0x73, 0x73,
	0x12, 0x3c, 0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x47,
	0x0a, 0x20, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x65,
	0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x4d, 0x73, 0x65, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x62, 0x67,
	0x70, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x65, 0x62, 0x67, 0x70, 0x48, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x6d, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x5d, 0x0a, 0x2c, 0x69, 0x73, 0x5f, 0x65, 0x62, 0x67, 0x70, 0x5f, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x68, 0x6f, 0x70, 0x5f, 0x62, 0x67, 0x70, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x27, 0x69, 0x73, 0x45, 0x62, 0x67, 0x70, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x68, 0x6f, 0x70, 0x42, 0x67, 0x70, 0x6d, 0x70, 0x6c, 0x73, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x78,
	0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x73,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x58, 0x78, 0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x61, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x79, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x59, 0x79, 0x12, 0x2d, 0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61,
	0x73, 0x5f, 0x6e, 0x6f, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x73, 0x4e, 0x6f, 0x50, 0x72, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a,
	0x17, 0x62, 0x67, 0x70, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x62, 0x67, 0x70, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x62,
	0x67, 0x70, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x67, 0x70, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x16,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x68, 0x6f, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x17, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x48, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0xba, 0x01, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x8f, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a,
	0x14, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x66, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x73, 0x67,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x42, 0x75, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x15, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x75, 0x66,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x73,
	0x67, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x42, 0x75, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6d, 0x7a, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x64,
	0x6d, 0x7a, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x22, 0x0a, 0x0d, 0x65, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x64, 0x6d, 0x7a,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x62, 0x67, 0x70, 0x52, 0x65, 0x63, 0x76,
	0x44, 0x6d, 0x7a, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x62, 0x67, 0x70, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x6d, 0x7a, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x65, 0x62, 0x67, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x6d, 0x7a, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x74, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x74, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x34,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x34, 0x42, 0x79, 0x74, 0x65, 0x41, 0x73, 0x12,
	0x4a, 0x0a, 0x21, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x65,
	0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1f, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x66, 0x64, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x66, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x66, 0x64,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x62, 0x66, 0x64, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x66, 0x64, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x66, 0x64, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x74, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a,
	0x0e, 0x74, 0x6f, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x73, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x73, 0x72, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66,
	0x75, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x67, 0x72, 0x61, 0x63, 0x65,
	0x66, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x62, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x62,
	0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13,
	0x6e, 0x62, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x62, 0x72, 0x53, 0x74,
	0x61, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x6e,
	0x62, 0x72, 0x5f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x61, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x6e, 0x62, 0x72, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x41, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x18, 0x6e, 0x62, 0x72,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6e, 0x62, 0x72,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x62, 0x72, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x6e, 0x62, 0x72, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x34, 0x0a, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x76, 0x70, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x30, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x70, 0x6e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x70, 0x61, 0x74,
	0x68, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x61, 0x64, 0x64, 0x70, 0x61, 0x74, 0x68,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x42,
	0x0a, 0x1e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x64, 0x64, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x61, 0x64, 0x64, 0x70, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x36, 0x0a, 0x17, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x15, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x62, 0x65, 0x73, 0x74, 0x70, 0x61, 0x74, 0x68,
	0x5f, 0x75, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x62,
	0x65, 0x73, 0x74, 0x70, 0x61, 0x74, 0x68, 0x55, 0x73, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x1f, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x37, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x62,
	0x67, 0x70, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x49, 0x62, 0x67, 0x70, 0x12, 0x41, 0x0a, 0x1d, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x2b, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x26, 0x6e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6d, 0x0a, 0x35, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x73,
	0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x3b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x73, 0x4e, 0x6f, 0x6e, 0x43, 0x69, 0x72, 0x63, 0x75,
	0x6c, 0x61, 0x72, 0x12, 0x52, 0x0a, 0x26, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x22, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x68, 0x0a, 0x32, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x2c, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x3e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x16, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x67,
	0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x4c, 0x6f, 0x63, 0x50, 0x72, 0x65, 0x66, 0x12, 0x41, 0x0a, 0x1d, 0x67, 0x72, 0x61, 0x63,
	0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x73,
	0x5f, 0x70, 0x72, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1a, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x41, 0x73, 0x50, 0x72, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x67,
	0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x18, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0xba, 0x01, 0x0a, 0x0e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x42, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x41, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xbc, 0x01, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x49,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xca, 0x01, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f,
	0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x14, 0x6d, 0x69,
	0x6e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xbf, 0x01, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc3, 0x01, 0x0a, 0x13, 0x65, 0x62, 0x67, 0x70, 0x5f, 0x68, 0x6f,
	0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x10, 0x65, 0x62, 0x67, 0x70, 0x48, 0x6f,
	0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xb5, 0x01, 0x0a, 0x0b, 0x74,
	0x63, 0x70, 0x6d, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0a, 0x74, 0x63, 0x70, 0x6d, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xbe, 0x01, 0x0a, 0x10, 0x62, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x0e, 0x62, 0x6d, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0xb9, 0x01, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xb8, 0x01, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x41, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xb9, 0x01, 0x0a, 0x0d, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc4, 0x01, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xbe, 0x01,
	0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63,
	0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67,
	0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xb9,
	0x01, 0x0a, 0x0d, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f,
	0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0c, 0x73, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xb5, 0x01, 0x0a, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xbb, 0x01, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x51, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xbd, 0x01, 0x0a, 0x10, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x6f,
	0x67, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x4f, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x53, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xcb, 0x01, 0x0a, 0x17, 0x64,
	0x6d, 0x7a, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e,
	0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x14, 0x64, 0x6d, 0x7a, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc1, 0x01, 0x0a, 0x12, 0x65, 0x62, 0x67,
	0x70, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x64, 0x6d, 0x7a, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69,
	0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0f, 0x65, 0x62, 0x67,
	0x70, 0x52, 0x65, 0x63, 0x76, 0x44, 0x6d, 0x7a, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc1, 0x01, 0x0a,
	0x12, 0x65, 0x62, 0x67, 0x70, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x6d, 0x7a, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x0f, 0x65, 0x62, 0x67, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x6d, 0x7a, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0xc0, 0x01, 0x0a, 0x11, 0x74, 0x74, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e,
	0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0xcb, 0x01, 0x0a, 0x17, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x34, 0x5f, 0x62, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69,
	0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x14, 0x73, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x34, 0x42, 0x62, 0x79, 0x74, 0x65, 0x41, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xc9, 0x01, 0x0a, 0x16, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x59, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x13, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xaf, 0x01,
	0x0a, 0x08, 0x62, 0x66, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x07, 0x62, 0x66, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xc6, 0x01, 0x0a, 0x14, 0x62, 0x66, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93,
	0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69,
	0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x12, 0x62, 0x66, 0x64, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc4, 0x01, 0x0a, 0x13, 0x62, 0x66, 0x64,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f,
	0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x11, 0x62, 0x66,
	0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xaf, 0x01, 0x0a, 0x08, 0x74, 0x6f, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f,
	0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x07, 0x74, 0x6f, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xc0, 0x01, 0x0a, 0x11, 0x6e, 0x73, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x0f, 0x6e, 0x73, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0xd9, 0x01, 0x0a, 0x1e, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x1b, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0xc7, 0x01, 0x0a, 0x15, 0x6e, 0x62, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x60, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x12, 0x6e, 0x62, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xcc, 0x01, 0x0a, 0x18, 0x6e,
	0x62, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x14, 0x6e, 0x62, 0x72, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xce, 0x01, 0x0a, 0x19, 0x6e, 0x62,
	0x72, 0x5f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x15, 0x6e, 0x62, 0x72, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x41, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xbc, 0x01, 0x0a, 0x0f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xc8, 0x01, 0x0a, 0x15, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x13, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0xcd, 0x01, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x76, 0x70, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f,
	0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72,
	0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x15, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x70, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0xd5, 0x01, 0x0a, 0x1c, 0x61, 0x64, 0x64, 0x70, 0x61, 0x74, 0x68,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x19, 0x61, 0x64, 0x64, 0x70, 0x61, 0x74, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xdb, 0x01, 0x0a,
	0x1f, 0x61, 0x64, 0x64, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f,
	0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x1c, 0x61, 0x64,
	0x64, 0x70, 0x61, 0x74, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xd5, 0x01, 0x0a, 0x1c, 0x65,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x19, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x65, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xe1, 0x01, 0x0a, 0x23, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x5f,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62,
	0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x1e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xd9, 0x01, 0x0a, 0x1e, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x1b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xe0, 0x01, 0x0a, 0x22, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x1e, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xe4, 0x01, 0x0a, 0x24, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x20, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xe0, 0x01, 0x0a,
	0x22, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x62, 0x67, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73,
	0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62,
	0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x1e, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x62, 0x67, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xe0, 0x01, 0x0a, 0x22, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e,
	0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x1e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0xfa, 0x01, 0x0a, 0x30, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01,
	0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x2a, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xef, 0x01, 0x0a, 0x2a, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x6c, 0x6f,
	0x67, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x70,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f,
	0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76,
	0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x25, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0xe6, 0x01, 0x0a, 0x25, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x71, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x21, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xca, 0x01, 0x0a, 0x16, 0x67,
	0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63,
	0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x52, 0x14, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xda, 0x01, 0x0a, 0x1f, 0x67, 0x72, 0x61, 0x63,
	0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x6c, 0x6f,
	0x63, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x73, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x1b, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75,
	0x6c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x63, 0x50, 0x72, 0x65, 0x66,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0xe0, 0x01, 0x0a, 0x22, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75,
	0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x73, 0x5f, 0x70, 0x72,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x74, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x1e, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75,
	0x6c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x73, 0x50, 0x72, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xdb, 0x01, 0x0a, 0x1f, 0x67, 0x72, 0x61, 0x63,
	0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x75, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x78,
	0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x2e,
	0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x1c, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75,
	0x6c, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0xe9, 0x01, 0x0a, 0x26, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x93, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f,
	0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x23, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2d, 0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x73, 0x18, 0x77, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x41, 0x73,
	0x12, 0x27, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x5f, 0x64, 0x75, 0x61,
	0x6c, 0x5f, 0x61, 0x73, 0x18, 0x78, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x73, 0x44, 0x75, 0x61, 0x6c, 0x41, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x08, 0x62, 0x67,
	0x70, 0x5f, 0x61, 0x66, 0x5f, 0x70, 0x12, 0xa5, 0x01, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x8e, 0x01, 0x2e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x5f,
	0x69, 0x6f, 0x73, 0x5f, 0x78, 0x72, 0x5f, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x72, 0x66, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x72, 0x66,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x61, 0x66, 0x5f, 0x64, 0x65, 0x70, 0x5f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescOnce sync.Once
	file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescData = file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDesc
)

func file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescGZIP() []byte {
	file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescOnce.Do(func() {
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescData = protoimpl.X.CompressGZIP(file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescData)
	})
	return file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDescData
}

var file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_goTypes = []interface{}{
	(*BgpConfigEntityBag_KEYS)(nil), // 0: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entity_bag_KEYS
	(*BgpConfigEntityBag)(nil),      // 1: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entity_bag
	(*IPV4TunnelAddressType)(nil),   // 2: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV4TunnelAddressType
	(*IPV4MDTAddressType)(nil),      // 3: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV4MDTAddressType
	(*RTConstraintAddressType)(nil), // 4: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.RTConstraintAddressType
	(*IPV6AddressType)(nil),         // 5: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6AddressType
	(*BgpL2VpnAddrT)(nil),           // 6: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_l2vpn_addr_t
	(*L2VPNEVPNAddressType)(nil),    // 7: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.L2VPNEVPNAddressType
	(*BgpL2VpnMspwAddrT)(nil),       // 8: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_l2vpn_mspw_addr_t
	(*IPV6MVPNAddressType)(nil),     // 9: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6MVPNAddressType
	(*IPV4MVPNAddressType)(nil),     // 10: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV4MVPNAddressType
	(*LS_LSAddressType)(nil),        // 11: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.LS_LSAddressType
	(*IPv4FlowspecAddressType)(nil), // 12: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPv4FlowspecAddressType
	(*IPv6FlowspecAddressType)(nil), // 13: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPv6FlowspecAddressType
	(*BgpAddrtype)(nil),             // 14: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype
	(*BgpConfigEntid_)(nil),         // 15: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid_
	(*BgpConfigEntid_Item)(nil),     // 16: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid__item
	(*BgpConfigInfo_)(nil),          // 17: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	(*BgpAfDep_)(nil),               // 18: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_
	(*BgpAfIndep_)(nil),             // 19: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_
	(*BgpAfP)(nil),                  // 20: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_p
}
var file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_depIdxs = []int32{
	14,  // 0: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entity_bag.neighbor_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype
	19,  // 1: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entity_bag.af_independent_config:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_
	20,  // 2: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entity_bag.af_dependent_config:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_p
	2,   // 3: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv4_tunnel_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV4TunnelAddressType
	3,   // 4: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv4_mdt_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV4MDTAddressType
	5,   // 5: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6AddressType
	5,   // 6: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_mcast_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6AddressType
	5,   // 7: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_label_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6AddressType
	5,   // 8: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_vpn_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6AddressType
	5,   // 9: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_vpn_mcast_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6AddressType
	6,   // 10: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.l2_vpnvpls_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_l2vpn_addr_t
	4,   // 11: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.rt_constraint_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.RTConstraintAddressType
	9,   // 12: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_mvpn_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV6MVPNAddressType
	10,  // 13: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv4_mvpn_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPV4MVPNAddressType
	7,   // 14: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.l2_vpn_evpn_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.L2VPNEVPNAddressType
	11,  // 15: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ls_ls_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.LS_LSAddressType
	8,   // 16: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.l2_vpn_mspw_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_l2vpn_mspw_addr_t
	12,  // 17: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv4_flowspec_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPv4FlowspecAddressType
	13,  // 18: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_flowspec_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPv6FlowspecAddressType
	12,  // 19: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv4_vpn_flowspec_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPv4FlowspecAddressType
	13,  // 20: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype.ipv6_vpn_flowspec_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.IPv6FlowspecAddressType
	16,  // 21: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid_.bgp_config_entid_:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid__item
	14,  // 22: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid__item.neighbor_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype
	15,  // 23: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_.inheritance_chain:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid_
	14,  // 24: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.orr_root_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype
	17,  // 25: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.orf_capability_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 26: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.default_originate_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 27: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.max_prefixes_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 28: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.orr_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 29: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.next_hop_self_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 30: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.next_hop_unchanged_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 31: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.route_policy_in_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 32: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.route_policy_out_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 33: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.prefix_filter_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 34: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.remove_private_as_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 35: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.remove_private_as_in_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 36: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.route_reflector_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 37: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.legacy_pe_rt_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 38: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.af_enabled_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 39: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.send_community_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 40: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.send_graceful_shutdown_community_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 41: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.send_extended_community_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 42: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.soft_reconfig_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 43: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.so_o_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 44: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.weight_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 45: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.allowas_in_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 46: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.af_long_lived_graceful_start_stale_time_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 47: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.af_long_lived_graceful_start_capable_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 48: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.as_override_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 49: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.aigp_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 50: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.aigp_cost_community_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 51: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.aigp_med:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 52: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.accept_own_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 53: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.multipath_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 54: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.fspec_valid_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 55: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.next_hop_unchanged_mpath_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 56: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.permanent_network_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 57: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.send_mcast_attr_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 58: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.advertise_v4_afi_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 59: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.advertise_v6_afi_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 60: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.advertise_l2_vpnevpn_afi_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 61: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.advertise_dis_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 62: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.advertise_def_vrf_imp_disable_afi_v4_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 63: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.advertise_def_vrf_imp_disable_afi_v6_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 64: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.af_encapsulation_type_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 65: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.import_afi_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 66: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_.advertise_local_labeled_route_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	14,  // 67: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.local_ip_address:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype
	17,  // 68: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.remote_as_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 69: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.speaker_id_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 70: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.min_advertisement_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 71: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.description_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 72: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.ebgp_hop_count_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 73: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.tcpmss_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 74: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.bmp_servers_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 75: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.keychain_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 76: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.local_as_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 77: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.password_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 78: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.receive_buffer_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 79: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.send_buffer_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 80: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.shutdown_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 81: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.timers_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 82: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.local_address_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 83: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.msg_log_in_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 84: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.msg_log_out_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 85: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.update_source_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 86: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.dmz_link_bandwidth_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 87: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.ebgp_recv_dmz_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 88: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.ebgp_send_dmz_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 89: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.ttl_security_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 90: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.suppress4_bbyte_as_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 91: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.session_open_mode_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 92: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.bfd_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 93: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.bfd_mininterval_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 94: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.bfd_multiplier_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 95: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.tos_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 96: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.nsr_disabled_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 97: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.graceful_restart_disabled_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 98: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.nbr_restart_time_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 99: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.nbr_stale_path_time_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 100: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.nbr_enforce_first_as_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 101: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.cluster_id_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 102: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.ignore_connected_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 103: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.internal_vpn_client_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 104: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.addpath_send_capability_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 105: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.addpath_receive_capability_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 106: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.egress_peer_engineering_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 107: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.update_error_handling_no_reset_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 108: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.prefix_validation_disable_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 109: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.prefix_validation_use_validit_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 110: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.prefix_validation_allow_invalid_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 111: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.prefix_validation_signal_ibgp_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 112: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.neighbor_update_filter_exists_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 113: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.neighbor_update_filter_message_buffer_count_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 114: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.neighbor_update_filter_syslog_disable_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 115: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.neighbor_update_filter_attribute_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 116: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.graceful_shutdown_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 117: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.graceful_shutdown_loc_pref_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 118: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.graceful_shutdown_as_prepends_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 119: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.graceful_shutdown_activate_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	17,  // 120: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_.capability_negotiation_suppressed_info:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_
	18,  // 121: cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_p.value:type_name -> cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_
	122, // [122:122] is the sub-list for method output_type
	122, // [122:122] is the sub-list for method input_type
	122, // [122:122] is the sub-list for extension type_name
	122, // [122:122] is the sub-list for extension extendee
	0,   // [0:122] is the sub-list for field type_name
}

func init() {
	file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_init()
}
func file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_init() {
	if File_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpConfigEntityBag_KEYS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpConfigEntityBag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPV4TunnelAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPV4MDTAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RTConstraintAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPV6AddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpL2VpnAddrT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L2VPNEVPNAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpL2VpnMspwAddrT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPV6MVPNAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPV4MVPNAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LS_LSAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPv4FlowspecAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPv6FlowspecAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpAddrtype); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpConfigEntid_); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpConfigEntid_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpConfigInfo_); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpAfDep_); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpAfIndep_); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BgpAfP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_goTypes,
		DependencyIndexes: file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_depIdxs,
		MessageInfos:      file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_msgTypes,
	}.Build()
	File_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto = out.File
	file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_rawDesc = nil
	file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_goTypes = nil
	file_cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration_bgp_config_entity_bag_proto_depIdxs = nil
}
